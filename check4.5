{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {
    "hideCode": false,
    "hidePrompt": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Requirement already satisfied: pycountry in /anaconda3/lib/python3.7/site-packages (19.8.18)\n",
      "Requirement already satisfied: pycountry-convert in /anaconda3/lib/python3.7/site-packages (0.7.2)\n",
      "Requirement already satisfied: pycountry>=16.11.27.1 in /anaconda3/lib/python3.7/site-packages (from pycountry-convert) (19.8.18)\n",
      "Requirement already satisfied: pprintpp>=0.3.0 in /anaconda3/lib/python3.7/site-packages (from pycountry-convert) (0.4.0)\n",
      "Requirement already satisfied: pytest-cov>=2.5.1 in /anaconda3/lib/python3.7/site-packages (from pycountry-convert) (2.8.1)\n",
      "Requirement already satisfied: repoze.lru>=0.7 in /anaconda3/lib/python3.7/site-packages (from pycountry-convert) (0.7)\n",
      "Requirement already satisfied: wheel>=0.30.0 in /anaconda3/lib/python3.7/site-packages (from pycountry-convert) (0.33.6)\n",
      "Requirement already satisfied: pytest>=3.4.0 in /anaconda3/lib/python3.7/site-packages (from pycountry-convert) (5.2.1)\n",
      "Requirement already satisfied: pytest-mock>=1.6.3 in /anaconda3/lib/python3.7/site-packages (from pycountry-convert) (1.11.2)\n",
      "Requirement already satisfied: coverage>=4.4 in /anaconda3/lib/python3.7/site-packages (from pytest-cov>=2.5.1->pycountry-convert) (4.5.4)\n",
      "Requirement already satisfied: py>=1.5.0 in /anaconda3/lib/python3.7/site-packages (from pytest>=3.4.0->pycountry-convert) (1.8.0)\n",
      "Requirement already satisfied: packaging in /anaconda3/lib/python3.7/site-packages (from pytest>=3.4.0->pycountry-convert) (19.2)\n",
      "Requirement already satisfied: attrs>=17.4.0 in /anaconda3/lib/python3.7/site-packages (from pytest>=3.4.0->pycountry-convert) (19.3.0)\n",
      "Requirement already satisfied: more-itertools>=4.0.0 in /anaconda3/lib/python3.7/site-packages (from pytest>=3.4.0->pycountry-convert) (7.2.0)\n",
      "Requirement already satisfied: atomicwrites>=1.0 in /anaconda3/lib/python3.7/site-packages (from pytest>=3.4.0->pycountry-convert) (1.3.0)\n",
      "Requirement already satisfied: pluggy<1.0,>=0.12 in /anaconda3/lib/python3.7/site-packages (from pytest>=3.4.0->pycountry-convert) (0.13.0)\n",
      "Requirement already satisfied: wcwidth in /anaconda3/lib/python3.7/site-packages (from pytest>=3.4.0->pycountry-convert) (0.1.7)\n",
      "Requirement already satisfied: importlib-metadata>=0.12 in /anaconda3/lib/python3.7/site-packages (from pytest>=3.4.0->pycountry-convert) (0.23)\n",
      "Requirement already satisfied: pyparsing>=2.0.2 in /anaconda3/lib/python3.7/site-packages (from packaging->pytest>=3.4.0->pycountry-convert) (2.4.2)\n",
      "Requirement already satisfied: six in /anaconda3/lib/python3.7/site-packages (from packaging->pytest>=3.4.0->pycountry-convert) (1.12.0)\n",
      "Requirement already satisfied: zipp>=0.5 in /anaconda3/lib/python3.7/site-packages (from importlib-metadata>=0.12->pytest>=3.4.0->pycountry-convert) (0.6.0)\n",
      "Requirement already satisfied: lxml in /anaconda3/lib/python3.7/site-packages (4.4.1)\n",
      "Requirement already satisfied: countrygroups in /anaconda3/lib/python3.7/site-packages (0.9.0)\n",
      "Requirement already satisfied: shortcountrynames in /anaconda3/lib/python3.7/site-packages (from countrygroups) (0.9.0)\n"
     ]
    }
   ],
   "source": [
    "!pip install pycountry\n",
    "!pip install pycountry-convert\n",
    "import pandas as pd\n",
    "import matplotlib\n",
    "import matplotlib.pyplot as plt\n",
    "import pycountry\n",
    "import pycountry_convert as pcc\n",
    "import numpy\n",
    "!python3 -m pip install lxml\n",
    "from bs4 import BeautifulSoup\n",
    "import requests as rq\n",
    "!pip install countrygroups\n",
    "import countrygroups\n",
    "import numpy as np"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "hideCode": false,
    "hidePrompt": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>State Act ID</th>\n",
       "      <th>Intervention ID</th>\n",
       "      <th>State Act Title</th>\n",
       "      <th>Announcement Date</th>\n",
       "      <th>GTA Evaluation</th>\n",
       "      <th>Currently in force</th>\n",
       "      <th>Inception Date</th>\n",
       "      <th>Removal Date</th>\n",
       "      <th>Implementing Jurisdiction</th>\n",
       "      <th>Intervention Type</th>\n",
       "      <th>MAST chapter</th>\n",
       "      <th>Affected Sectors</th>\n",
       "      <th>Affected Products</th>\n",
       "      <th>Affected Jurisdiction</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>53</td>\n",
       "      <td>17542</td>\n",
       "      <td>Zambia: Increase in fuel import duty to 25% fr...</td>\n",
       "      <td>2008-12-26</td>\n",
       "      <td>Red</td>\n",
       "      <td>yes</td>\n",
       "      <td>2008-12-26</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Zambia</td>\n",
       "      <td>Import tariff</td>\n",
       "      <td>Tariff measures</td>\n",
       "      <td>333</td>\n",
       "      <td>271012, 271019</td>\n",
       "      <td>France</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>53</td>\n",
       "      <td>17542</td>\n",
       "      <td>Zambia: Increase in fuel import duty to 25% fr...</td>\n",
       "      <td>2008-12-26</td>\n",
       "      <td>Red</td>\n",
       "      <td>yes</td>\n",
       "      <td>2008-12-26</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Zambia</td>\n",
       "      <td>Import tariff</td>\n",
       "      <td>Tariff measures</td>\n",
       "      <td>333</td>\n",
       "      <td>271012, 271019</td>\n",
       "      <td>United Arab Emirates</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>53</td>\n",
       "      <td>17542</td>\n",
       "      <td>Zambia: Increase in fuel import duty to 25% fr...</td>\n",
       "      <td>2008-12-26</td>\n",
       "      <td>Red</td>\n",
       "      <td>yes</td>\n",
       "      <td>2008-12-26</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Zambia</td>\n",
       "      <td>Import tariff</td>\n",
       "      <td>Tariff measures</td>\n",
       "      <td>333</td>\n",
       "      <td>271019</td>\n",
       "      <td>United Kingdom</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>53</td>\n",
       "      <td>17542</td>\n",
       "      <td>Zambia: Increase in fuel import duty to 25% fr...</td>\n",
       "      <td>2008-12-26</td>\n",
       "      <td>Red</td>\n",
       "      <td>yes</td>\n",
       "      <td>2008-12-26</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Zambia</td>\n",
       "      <td>Import tariff</td>\n",
       "      <td>Tariff measures</td>\n",
       "      <td>333</td>\n",
       "      <td>271012, 271019</td>\n",
       "      <td>Portugal</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>92</td>\n",
       "      <td>20128</td>\n",
       "      <td>Argentina: Non-automatic licensing requirement...</td>\n",
       "      <td>2009-03-25</td>\n",
       "      <td>Red</td>\n",
       "      <td>yes</td>\n",
       "      <td>2009-03-25</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Argentina</td>\n",
       "      <td>Import licensing requirement</td>\n",
       "      <td>E1 Non-automatic import-licensing procedures o...</td>\n",
       "      <td>429, 439, 441, 476, 479, 381</td>\n",
       "      <td>731815, 841510, 841581, 841590, 843360, 852349...</td>\n",
       "      <td>Spain</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   State Act ID  Intervention ID  \\\n",
       "0            53            17542   \n",
       "1            53            17542   \n",
       "2            53            17542   \n",
       "3            53            17542   \n",
       "4            92            20128   \n",
       "\n",
       "                                     State Act Title Announcement Date  \\\n",
       "0  Zambia: Increase in fuel import duty to 25% fr...        2008-12-26   \n",
       "1  Zambia: Increase in fuel import duty to 25% fr...        2008-12-26   \n",
       "2  Zambia: Increase in fuel import duty to 25% fr...        2008-12-26   \n",
       "3  Zambia: Increase in fuel import duty to 25% fr...        2008-12-26   \n",
       "4  Argentina: Non-automatic licensing requirement...        2009-03-25   \n",
       "\n",
       "  GTA Evaluation Currently in force Inception Date Removal Date  \\\n",
       "0            Red                yes     2008-12-26          NaN   \n",
       "1            Red                yes     2008-12-26          NaN   \n",
       "2            Red                yes     2008-12-26          NaN   \n",
       "3            Red                yes     2008-12-26          NaN   \n",
       "4            Red                yes     2009-03-25          NaN   \n",
       "\n",
       "  Implementing Jurisdiction             Intervention Type  \\\n",
       "0                    Zambia                 Import tariff   \n",
       "1                    Zambia                 Import tariff   \n",
       "2                    Zambia                 Import tariff   \n",
       "3                    Zambia                 Import tariff   \n",
       "4                 Argentina  Import licensing requirement   \n",
       "\n",
       "                                        MAST chapter  \\\n",
       "0                                    Tariff measures   \n",
       "1                                    Tariff measures   \n",
       "2                                    Tariff measures   \n",
       "3                                    Tariff measures   \n",
       "4  E1 Non-automatic import-licensing procedures o...   \n",
       "\n",
       "               Affected Sectors  \\\n",
       "0                           333   \n",
       "1                           333   \n",
       "2                           333   \n",
       "3                           333   \n",
       "4  429, 439, 441, 476, 479, 381   \n",
       "\n",
       "                                   Affected Products Affected Jurisdiction  \n",
       "0                                     271012, 271019                France  \n",
       "1                                     271012, 271019  United Arab Emirates  \n",
       "2                                             271019        United Kingdom  \n",
       "3                                     271012, 271019              Portugal  \n",
       "4  731815, 841510, 841581, 841590, 843360, 852349...                 Spain  "
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_trade = pd.read_excel(\"GTA_all_data.xlsx\")\n",
    "df_trade.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "hideCode": false,
    "hidePrompt": false
   },
   "source": [
    "For our project, we are looking to explore global economic developments pertaining to trade protectionism. An interesting dataset we came across was one posted by Global Trade Alert, an initiative by the Center for Policy Research which provides full coverage of the trade-discriminatory measures all across the globe. We are interested in observing the trends of these measures over the past few years, how this has evolved from region-to-region, what types of trade discriminatory measures countries have resorted to, and how some of the measures implemented align with the country’s said objectives.\n",
    "   \n",
    "The dataset provided by Global Trade Alert provides tons of information that helps us to answer these questions. Starting from 2008, the dataset lists which countries have implemented such measures, along with the countries they are implemented on. It provides the type of the measure – non-tariff or tariff, on what products, and whether the measure is currently in force. GTA also have a unique “color” indicator which states the serious of measure, with red classifying those which certainty discriminates foreign commercial interests, yellow which could potential deter foreign commercial interests, and green which pertain to more liberalizing (i.e. Anti-trade) measures. \n",
    "    \n",
    "As mentioned earlier, this dataset provides an opportunity to pursue one, or many of our said goals. With the rapid global trade developments across the world, ranging from US-China trade war, China’s New Silk Road, and Brexit, it would be interesting to conduct a time-series analysis on the change in the global trade landscape since the 2008 recession. We are currently looking for a data set that matches the one with GTA but goes further back than 2008. Another key question we look to analyze is how the global landscape has evolved since the 2008 financial crises. Part of the severity of the recession in 2008 was linked to “global interconnectedness,” where trouble in the major developed and developing countries had subsequent negative effects on other smaller and more dependent economies. It will be interesting to whether countries have now taken steps to protect themselves from external factors by insulating themselves from the global trade environment, either relying on themselves for the provisions of goods and services or focusing on more “regional” trade developments as opposed to global."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "hideCode": false,
    "hidePrompt": false
   },
   "source": [
    "## Milestone 2"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "hideCode": false,
    "hidePrompt": false
   },
   "source": [
    "For our project, we've decided to go ahead with the data provided by the Global Trade Alert Database. This Database consists of information on the types of trade measures implemented over the past ten years. This dataset is quite extensive as the information provided to us is broken by the how protective/liberal the measure is, implementing/receiving jurisdictions, affected sectors and products, and the length of the trade measures. Let's take a quick look at our data before we start working towards meeting our objectives for this milestone. The dataset can be found [at this link](https://www.globaltradealert.org/data_extraction), or on our github as 'GTA_all_data.xlsx'."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "hideCode": false,
    "hidePrompt": false
   },
   "source": [
    "Fortunately, the data we worked was quite easy to load and already met the key principles of the tidy data format. However, we wanted transform our variables to help us with visualizations and also with our calculations. First, we looked at potential variables that need transformation in their dtypes. Most of the data except for Inception Date, Announcement Date, and Removal Date were in the type we wanted. Similar to Project 1, we converted these variables to datetime format."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "hideCode": false,
    "hidePrompt": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "State Act ID                  int64\n",
       "Intervention ID               int64\n",
       "State Act Title              object\n",
       "Announcement Date            object\n",
       "GTA Evaluation               object\n",
       "Currently in force           object\n",
       "Inception Date               object\n",
       "Removal Date                 object\n",
       "Implementing Jurisdiction    object\n",
       "Intervention Type            object\n",
       "MAST chapter                 object\n",
       "Affected Sectors             object\n",
       "Affected Products            object\n",
       "Affected Jurisdiction        object\n",
       "dtype: object"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_trade.dtypes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "hideCode": false,
    "hidePrompt": false
   },
   "outputs": [],
   "source": [
    "df_trade['Inception Date'] =  pd.to_datetime(df_trade['Inception Date'])\n",
    "df_trade['Announcement Date'] =  pd.to_datetime(df_trade['Announcement Date'])\n",
    "df_trade['Removal Date'] =  pd.to_datetime(df_trade['Removal Date'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {
    "hideCode": false,
    "hidePrompt": false
   },
   "outputs": [],
   "source": [
    "df_trade.columns = ['State Act ID', 'Intervention ID', 'State Act Title',\n",
    "       'Announcement Date', 'GTA_Evaluation', 'Currently in force',\n",
    "       'Inception Date', 'Removal Date', 'Implementing Jurisdiction',\n",
    "       'Intervention Type', 'MAST chapter', 'Affected Sectors',\n",
    "       'Affected Products', 'Affected Jurisdiction']"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "hideCode": false,
    "hidePrompt": false
   },
   "source": [
    "### Exploratory Data Analysis"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "hideCode": false,
    "hidePrompt": false
   },
   "source": [
    "#### Summary Statistics"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "hideCode": false,
    "hidePrompt": false
   },
   "source": [
    "We don't have a lot of quantitative variables to analyse, but we have an important categorical variable in GTA Evaluation, which measures how liberal/restrictive a trade measure has been. According to GTA, green labeled interventions are know has trade liberalising, red known as harmful, and amber categorized as those that have strong chance of being harmful to trade prospects. Over the time period after the recession from 2008 throught 2018 the trade environment has been somewhat bleak. Over a half of the measures implemented during this 10 year period have been red, while only 35% of have been trade liberalising. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {
    "hideCode": false,
    "hidePrompt": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Red      0.574244\n",
       "Green    0.344987\n",
       "Amber    0.080769\n",
       "Name: GTA_Evaluation, dtype: float64"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "gta_counts = df_trade[\"GTA_Evaluation\"].value_counts()\n",
    "gta_counts/gta_counts.sum()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "hideCode": false,
    "hidePrompt": false
   },
   "source": [
    "### Graph 1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {
    "hideCode": false,
    "hidePrompt": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "df_trade[\"announcement_year\"] = df_trade[\"Announcement Date\"].dt.strftime(\"%Y\")\n",
    "df_trade[\"announcement_year\"] =  pd.to_numeric(df_trade[\"announcement_year\"])\n",
    "df_trade_after_2007 = df_trade[df_trade[\"announcement_year\"] >= 2008]\n",
    "year_gta_pivot = (df_trade_after_2007.groupby([\"announcement_year\", \"GTA_Evaluation\"]).GTA_Evaluation)\n",
    "green = year_gta_pivot.count().unstack([\"GTA_Evaluation\"])['Green']\n",
    "amber = year_gta_pivot.count().unstack([\"GTA_Evaluation\"])['Amber']\n",
    "red = year_gta_pivot.count().unstack([\"GTA_Evaluation\"])['Red']\n",
    "\n",
    "x_axis = year_gta_pivot.count().unstack([\"GTA_Evaluation\"]).index.tolist()\n",
    "y_axis =[red, amber, green]\n",
    " \n",
    "pal = [\"red\", \"yellow\", \"green\"]\n",
    "plt.stackplot(x_axis, y_axis, labels=['red','amber','green'], colors=pal, alpha=0.4)\n",
    "plt.legend(loc='upper right')\n",
    "plt.xlabel('year')\n",
    "plt.ylabel('trade invention')\n",
    "plt.title('Count of GTA Evaluations from 2008 to 2018')\n",
    "plt.show()\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "hideCode": false,
    "hidePrompt": false
   },
   "source": [
    "## Graph 2"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "hideCode": false,
    "hidePrompt": false
   },
   "source": [
    "A key variable to our project is the Intervention Type. This data consists of all types of trade measures that have been implemented since 2008. Unfortunately, there are way too many categories that make it difficult to conduct our analysis and visualization. To fix this, we thought it would be easier to categorize into two main buckets: Import Tariff and Non-Tariff Measure. To do this, we first created a variable \"mask\" that returns True if the Intervention is Import Tariff and Non-Tariff otherwise. We then used our mask variable to map this onto our new variable in the data \"Trade Measure Type.\" Using this new variable, we now only had two categories to work with, and made it much simpler to do a small visualization on how these two measures have evovled over time. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {
    "hideCode": false,
    "hidePrompt": false
   },
   "outputs": [],
   "source": [
    "df_trade[\"mask\"] = (df_trade[\"Intervention Type\"] == \"Import tariff\") | (df_trade[\"Intervention Type\"] == \"Import tariff quota\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {
    "hideCode": false,
    "hidePrompt": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>State Act ID</th>\n",
       "      <th>Intervention ID</th>\n",
       "      <th>State Act Title</th>\n",
       "      <th>Announcement Date</th>\n",
       "      <th>GTA_Evaluation</th>\n",
       "      <th>Currently in force</th>\n",
       "      <th>Inception Date</th>\n",
       "      <th>Removal Date</th>\n",
       "      <th>Implementing Jurisdiction</th>\n",
       "      <th>Intervention Type</th>\n",
       "      <th>MAST chapter</th>\n",
       "      <th>Affected Sectors</th>\n",
       "      <th>Affected Products</th>\n",
       "      <th>Affected Jurisdiction</th>\n",
       "      <th>announcement_year</th>\n",
       "      <th>mask</th>\n",
       "      <th>Trade Measure Type</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>53</td>\n",
       "      <td>17542</td>\n",
       "      <td>Zambia: Increase in fuel import duty to 25% fr...</td>\n",
       "      <td>2008-12-26</td>\n",
       "      <td>Red</td>\n",
       "      <td>yes</td>\n",
       "      <td>2008-12-26</td>\n",
       "      <td>NaT</td>\n",
       "      <td>Zambia</td>\n",
       "      <td>Import tariff</td>\n",
       "      <td>Tariff measures</td>\n",
       "      <td>333</td>\n",
       "      <td>271012, 271019</td>\n",
       "      <td>France</td>\n",
       "      <td>2008</td>\n",
       "      <td>True</td>\n",
       "      <td>Tariff</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>53</td>\n",
       "      <td>17542</td>\n",
       "      <td>Zambia: Increase in fuel import duty to 25% fr...</td>\n",
       "      <td>2008-12-26</td>\n",
       "      <td>Red</td>\n",
       "      <td>yes</td>\n",
       "      <td>2008-12-26</td>\n",
       "      <td>NaT</td>\n",
       "      <td>Zambia</td>\n",
       "      <td>Import tariff</td>\n",
       "      <td>Tariff measures</td>\n",
       "      <td>333</td>\n",
       "      <td>271012, 271019</td>\n",
       "      <td>United Arab Emirates</td>\n",
       "      <td>2008</td>\n",
       "      <td>True</td>\n",
       "      <td>Tariff</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>53</td>\n",
       "      <td>17542</td>\n",
       "      <td>Zambia: Increase in fuel import duty to 25% fr...</td>\n",
       "      <td>2008-12-26</td>\n",
       "      <td>Red</td>\n",
       "      <td>yes</td>\n",
       "      <td>2008-12-26</td>\n",
       "      <td>NaT</td>\n",
       "      <td>Zambia</td>\n",
       "      <td>Import tariff</td>\n",
       "      <td>Tariff measures</td>\n",
       "      <td>333</td>\n",
       "      <td>271019</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>2008</td>\n",
       "      <td>True</td>\n",
       "      <td>Tariff</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>53</td>\n",
       "      <td>17542</td>\n",
       "      <td>Zambia: Increase in fuel import duty to 25% fr...</td>\n",
       "      <td>2008-12-26</td>\n",
       "      <td>Red</td>\n",
       "      <td>yes</td>\n",
       "      <td>2008-12-26</td>\n",
       "      <td>NaT</td>\n",
       "      <td>Zambia</td>\n",
       "      <td>Import tariff</td>\n",
       "      <td>Tariff measures</td>\n",
       "      <td>333</td>\n",
       "      <td>271012, 271019</td>\n",
       "      <td>Portugal</td>\n",
       "      <td>2008</td>\n",
       "      <td>True</td>\n",
       "      <td>Tariff</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>92</td>\n",
       "      <td>20128</td>\n",
       "      <td>Argentina: Non-automatic licensing requirement...</td>\n",
       "      <td>2009-03-25</td>\n",
       "      <td>Red</td>\n",
       "      <td>yes</td>\n",
       "      <td>2009-03-25</td>\n",
       "      <td>NaT</td>\n",
       "      <td>Argentina</td>\n",
       "      <td>Import licensing requirement</td>\n",
       "      <td>E1 Non-automatic import-licensing procedures o...</td>\n",
       "      <td>429, 439, 441, 476, 479, 381</td>\n",
       "      <td>731815, 841510, 841581, 841590, 843360, 852349...</td>\n",
       "      <td>Spain</td>\n",
       "      <td>2009</td>\n",
       "      <td>False</td>\n",
       "      <td>Non-Tariff</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   State Act ID  Intervention ID  \\\n",
       "0            53            17542   \n",
       "1            53            17542   \n",
       "2            53            17542   \n",
       "3            53            17542   \n",
       "4            92            20128   \n",
       "\n",
       "                                     State Act Title Announcement Date  \\\n",
       "0  Zambia: Increase in fuel import duty to 25% fr...        2008-12-26   \n",
       "1  Zambia: Increase in fuel import duty to 25% fr...        2008-12-26   \n",
       "2  Zambia: Increase in fuel import duty to 25% fr...        2008-12-26   \n",
       "3  Zambia: Increase in fuel import duty to 25% fr...        2008-12-26   \n",
       "4  Argentina: Non-automatic licensing requirement...        2009-03-25   \n",
       "\n",
       "  GTA_Evaluation Currently in force Inception Date Removal Date  \\\n",
       "0            Red                yes     2008-12-26          NaT   \n",
       "1            Red                yes     2008-12-26          NaT   \n",
       "2            Red                yes     2008-12-26          NaT   \n",
       "3            Red                yes     2008-12-26          NaT   \n",
       "4            Red                yes     2009-03-25          NaT   \n",
       "\n",
       "  Implementing Jurisdiction             Intervention Type  \\\n",
       "0                    Zambia                 Import tariff   \n",
       "1                    Zambia                 Import tariff   \n",
       "2                    Zambia                 Import tariff   \n",
       "3                    Zambia                 Import tariff   \n",
       "4                 Argentina  Import licensing requirement   \n",
       "\n",
       "                                        MAST chapter  \\\n",
       "0                                    Tariff measures   \n",
       "1                                    Tariff measures   \n",
       "2                                    Tariff measures   \n",
       "3                                    Tariff measures   \n",
       "4  E1 Non-automatic import-licensing procedures o...   \n",
       "\n",
       "               Affected Sectors  \\\n",
       "0                           333   \n",
       "1                           333   \n",
       "2                           333   \n",
       "3                           333   \n",
       "4  429, 439, 441, 476, 479, 381   \n",
       "\n",
       "                                   Affected Products Affected Jurisdiction  \\\n",
       "0                                     271012, 271019                France   \n",
       "1                                     271012, 271019  United Arab Emirates   \n",
       "2                                             271019        United Kingdom   \n",
       "3                                     271012, 271019              Portugal   \n",
       "4  731815, 841510, 841581, 841590, 843360, 852349...                 Spain   \n",
       "\n",
       "   announcement_year   mask Trade Measure Type  \n",
       "0               2008   True             Tariff  \n",
       "1               2008   True             Tariff  \n",
       "2               2008   True             Tariff  \n",
       "3               2008   True             Tariff  \n",
       "4               2009  False         Non-Tariff  "
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_trade[\"Trade Measure Type\"] = df_trade[\"mask\"].map({\n",
    "    True : \"Tariff\",\n",
    "    False : \"Non-Tariff\",\n",
    "})\n",
    "\n",
    "df_trade.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {
    "hideCode": false,
    "hidePrompt": false
   },
   "outputs": [],
   "source": [
    "df_trade[\"announcement_year\"] = df_trade[\"Announcement Date\"].dt.strftime(\"%Y\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {
    "hideCode": false,
    "hidePrompt": false
   },
   "outputs": [],
   "source": [
    "df_trade[\"announcement_year\"] =  pd.to_numeric(df_trade[\"announcement_year\"])\n",
    "year_tmes_df = df_trade.groupby(\"announcement_year\")[\"Trade Measure Type\"].value_counts().to_frame()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {
    "hideCode": false,
    "hidePrompt": false
   },
   "outputs": [],
   "source": [
    "non_tariff = []\n",
    "tariff = []\n",
    "for i in range(1, 23):\n",
    "    if i % 2 == 0:\n",
    "        tariff.append(year_tmes_df['Trade Measure Type'][i])\n",
    "    else:\n",
    "        non_tariff.append(year_tmes_df['Trade Measure Type'][i])\n",
    "        \n",
    "years = []\n",
    "for i in range(2008, 2019):\n",
    "    years.append(i)\n",
    "data = {\n",
    "    'years': years, \n",
    "    'non_tariff': non_tariff, \n",
    "    'tariff': tariff }\n",
    "tar_line_df = pd.DataFrame(data)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "hideCode": false,
    "hidePrompt": false
   },
   "source": [
    "Our second graph consists of an analysis between the how the Import Tariffs and Non-Import Tariffs have progressed over time. We noticed two things in our analysis. First, there's a strong relationship between both Non-Tariff and Tariff Measures up until 2012. The positive relationship between break off and then resume after 2015. We're interested in finding out the deviation between the two. Additionally, looking at the data after 2016, both the tariff and non-tariff barriers have comparatively reduced, which seems a bit unusual considering the heightened trade tensions between some of the biggest trading countries like the United States and China. We are keen on identifying which regions or countries have been offsetting some of the increased import measures between China and the United States."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {
    "hideCode": false,
    "hidePrompt": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 1.0, 'Trade Measures from 2008 throught 2018')"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x720 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax = plt.subplots(1, 1, figsize=(15,10))\n",
    "\n",
    "ax.plot(tar_line_df['years'], tar_line_df['tariff'], label='Tariff')\n",
    "ax.plot(tar_line_df['years'], tar_line_df['non_tariff'], label='Non-tariff')\n",
    "\n",
    "ax.legend()\n",
    "ax.set_xlabel('Year')\n",
    "ax.set_ylabel('Trade Measures')\n",
    "ax.set_title('Trade Measures from 2008 throught 2018')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {
    "hideCode": false,
    "hidePrompt": false
   },
   "outputs": [],
   "source": [
    "\n",
    "non_tariff = []\n",
    "tariff = []\n",
    "for i in range(1, 23):\n",
    "    if i % 2 == 0:\n",
    "        tariff.append(year_tmes_df['Trade Measure Type'][i])\n",
    "    else:\n",
    "        non_tariff.append(year_tmes_df['Trade Measure Type'][i])\n",
    "years = []\n",
    "for i in range(2008, 2019):\n",
    "    years.append(i)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "hideCode": false,
    "hidePrompt": false
   },
   "source": [
    "Here we used a library called pycountry_convert to match each country to its continent. About 10 of the countries names were slightly different in out dataset than they are in the pycountry_convert library, so we had to change them to use the library."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {
    "hideCode": false,
    "hidePrompt": false
   },
   "outputs": [],
   "source": [
    "df_trade[\"Implementing Jurisdiction\"].replace({\"Republic of Korea\": \"Korea, Republic of\", \n",
    "                                               \"Bosnia & Herzegovina\": \"Bosnia and Herzegovina\", \n",
    "                                               \"Chinese Taipei\": \"Taiwan\", \"Trinidad & Tobago\": \"Trinidad and Tobago\", \n",
    "                                              \"US Virgin Islands\": \"Virgin Islands, U.S.\", \n",
    "                                              \"DR Congo\": \"Congo, The Democratic Republic of the\", \n",
    "                                              \"Lao\": \"Lao People's Democratic Republic\",\n",
    "                                              \"Sao Tome & Principe\": \"Sao Tome and Principe\",\n",
    "                                              \"Antigua & Barbuda\": \"Antigua and Barbuda\",\n",
    "                                              \"Saint Kitts & Nevis\": \"Saint Kitts and Nevis\",\n",
    "                                              \"Saint Vincent & the Grenadines\": \"Saint Vincent and the Grenadines\"}, \n",
    "                                              inplace=True)\n",
    "\n",
    "df_trade[\"Affected Jurisdiction\"].replace({\"Republic of Korea\": \"Korea, Republic of\", \n",
    "                                               \"Bosnia & Herzegovina\": \"Bosnia and Herzegovina\", \n",
    "                                               \"Chinese Taipei\": \"Taiwan\", \"Trinidad & Tobago\": \"Trinidad and Tobago\", \n",
    "                                              \"US Virgin Islands\": \"Virgin Islands, U.S.\", \n",
    "                                              \"DR Congo\": \"Congo, The Democratic Republic of the\", \n",
    "                                              \"Lao\": \"Lao People's Democratic Republic\",\n",
    "                                              \"Sao Tome & Principe\": \"Sao Tome and Principe\",\n",
    "                                              \"Antigua & Barbuda\": \"Antigua and Barbuda\",\n",
    "                                              \"Saint Kitts & Nevis\": \"Saint Kitts and Nevis\", \"U.S.\": \"United States of America\",\n",
    "                                              \"Saint Vincent & the Grenadines\": \"Saint Vincent and the Grenadines\",}, \n",
    "                                              inplace=True)\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {
    "hideCode": false,
    "hidePrompt": false
   },
   "outputs": [],
   "source": [
    "df_trade['impl_continent'] = df_trade[\"Implementing Jurisdiction\"].apply(lambda x: \n",
    "                                            pcc.country_alpha2_to_continent_code(pcc.country_name_to_country_alpha2(x, cn_name_format=\"default\")))\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "hideCode": false,
    "hidePrompt": false
   },
   "source": [
    "### Graph 3"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "hideCode": false,
    "hidePrompt": false
   },
   "source": [
    "Our third chart was to do a brief analysis of who implements these trade measures. We decided to construct a pie chart analysis to see who's been the most active in this area. Quite interestingly, Europe and Asia are the two most active, followed by North America. Europe is the largest trading bloc in world, so it's no surpise to us that they are among the most active in implementing trade measures. Asia coming in second is interesting as it is perhaps attributed to the fact that is quite a large region in terms of population, but could also be explained by the large shifts in trade sentiment following the 2008 recession. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {
    "hideCode": false,
    "hidePrompt": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x13e12f470>"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "trade_region= df_trade.impl_continent.value_counts()\n",
    "trade_region.plot.pie(title='Proportion of Trade Measures by Continent', \n",
    "                      labels=[\"Europe\", \"Asia\", \"North America\", \"South America\", \"Africa\", \"Oceania\"])\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "hideCode": false,
    "hidePrompt": false
   },
   "source": [
    "### Data Scraping\n",
    "\n",
    "Here we scraped data from the Global Trade Alert website to associate each sectorID with a sector. We plan on using this to better understand how trade affect different sectors, as each act in out primary dataset has a list of affected sectors associated with it. The data was scraped from [this](https://www.globaltradealert.org/sectors) page."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {
    "hideCode": false,
    "hidePrompt": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>sectorID</th>\n",
       "      <th>sector</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>011</td>\n",
       "      <td>cereals</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>012</td>\n",
       "      <td>vegetables</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>013</td>\n",
       "      <td>fruits and nuts</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>014</td>\n",
       "      <td>oilseeds and oleaginous fruits</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>015</td>\n",
       "      <td>edible roots and tubers with high starch or in...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>324</th>\n",
       "      <td>972</td>\n",
       "      <td>beauty and physical well-being services</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>325</th>\n",
       "      <td>973</td>\n",
       "      <td>funeral, cremation and undertaking services</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>326</th>\n",
       "      <td>979</td>\n",
       "      <td>other miscellaneous services</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>327</th>\n",
       "      <td>980</td>\n",
       "      <td>domestic services</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>328</th>\n",
       "      <td>990</td>\n",
       "      <td>services provided by extraterritorial organiza...</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>329 rows × 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "    sectorID                                             sector\n",
       "0        011                                            cereals\n",
       "1        012                                         vegetables\n",
       "2        013                                    fruits and nuts\n",
       "3        014                     oilseeds and oleaginous fruits\n",
       "4        015  edible roots and tubers with high starch or in...\n",
       "..       ...                                                ...\n",
       "324      972            beauty and physical well-being services\n",
       "325      973        funeral, cremation and undertaking services\n",
       "326      979                       other miscellaneous services\n",
       "327      980                                  domestic services\n",
       "328      990  services provided by extraterritorial organiza...\n",
       "\n",
       "[329 rows x 2 columns]"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "r = rq.get('https://www.globaltradealert.org/sectors')\n",
    "bisque = BeautifulSoup(r.text, 'html.parser')\n",
    "crabby = bisque.prettify()\n",
    "sector_lists = bisque.find(\"ul\", class_=\"list-unstyled sector_search\")\n",
    "bisque.find(\"ul\", class_=\"list-unstyled sector_search\")\n",
    "\n",
    "sector_li = sector_lists.find_all(\"li\")\n",
    "sector_li\n",
    "\n",
    "sectorIDs = []\n",
    "sectorNames = []\n",
    "\n",
    "for i in range(0, 329):\n",
    "    sectorIDs.append(sector_li[i]['id'][7:])\n",
    "    sectorNames.append(sector_li[i]['name'])\n",
    "    \n",
    "sector_df = pd.DataFrame({'sectorID': sectorIDs, 'sector': sectorNames})\n",
    "sector_df "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {
    "hideCode": false,
    "hidePrompt": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>State Act ID</th>\n",
       "      <th>Intervention ID</th>\n",
       "      <th>State Act Title</th>\n",
       "      <th>Announcement Date</th>\n",
       "      <th>GTA_Evaluation</th>\n",
       "      <th>Currently in force</th>\n",
       "      <th>Inception Date</th>\n",
       "      <th>Removal Date</th>\n",
       "      <th>Implementing Jurisdiction</th>\n",
       "      <th>Intervention Type</th>\n",
       "      <th>MAST chapter</th>\n",
       "      <th>Affected Sectors</th>\n",
       "      <th>Affected Products</th>\n",
       "      <th>Affected Jurisdiction</th>\n",
       "      <th>announcement_year</th>\n",
       "      <th>mask</th>\n",
       "      <th>Trade Measure Type</th>\n",
       "      <th>impl_continent</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>53</td>\n",
       "      <td>17542</td>\n",
       "      <td>Zambia: Increase in fuel import duty to 25% fr...</td>\n",
       "      <td>2008-12-26</td>\n",
       "      <td>Red</td>\n",
       "      <td>yes</td>\n",
       "      <td>2008-12-26</td>\n",
       "      <td>NaT</td>\n",
       "      <td>Zambia</td>\n",
       "      <td>Import tariff</td>\n",
       "      <td>Tariff measures</td>\n",
       "      <td>333</td>\n",
       "      <td>271012, 271019</td>\n",
       "      <td>France</td>\n",
       "      <td>2008</td>\n",
       "      <td>True</td>\n",
       "      <td>Tariff</td>\n",
       "      <td>AF</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>53</td>\n",
       "      <td>17542</td>\n",
       "      <td>Zambia: Increase in fuel import duty to 25% fr...</td>\n",
       "      <td>2008-12-26</td>\n",
       "      <td>Red</td>\n",
       "      <td>yes</td>\n",
       "      <td>2008-12-26</td>\n",
       "      <td>NaT</td>\n",
       "      <td>Zambia</td>\n",
       "      <td>Import tariff</td>\n",
       "      <td>Tariff measures</td>\n",
       "      <td>333</td>\n",
       "      <td>271012, 271019</td>\n",
       "      <td>United Arab Emirates</td>\n",
       "      <td>2008</td>\n",
       "      <td>True</td>\n",
       "      <td>Tariff</td>\n",
       "      <td>AF</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>53</td>\n",
       "      <td>17542</td>\n",
       "      <td>Zambia: Increase in fuel import duty to 25% fr...</td>\n",
       "      <td>2008-12-26</td>\n",
       "      <td>Red</td>\n",
       "      <td>yes</td>\n",
       "      <td>2008-12-26</td>\n",
       "      <td>NaT</td>\n",
       "      <td>Zambia</td>\n",
       "      <td>Import tariff</td>\n",
       "      <td>Tariff measures</td>\n",
       "      <td>333</td>\n",
       "      <td>271019</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>2008</td>\n",
       "      <td>True</td>\n",
       "      <td>Tariff</td>\n",
       "      <td>AF</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>53</td>\n",
       "      <td>17542</td>\n",
       "      <td>Zambia: Increase in fuel import duty to 25% fr...</td>\n",
       "      <td>2008-12-26</td>\n",
       "      <td>Red</td>\n",
       "      <td>yes</td>\n",
       "      <td>2008-12-26</td>\n",
       "      <td>NaT</td>\n",
       "      <td>Zambia</td>\n",
       "      <td>Import tariff</td>\n",
       "      <td>Tariff measures</td>\n",
       "      <td>333</td>\n",
       "      <td>271012, 271019</td>\n",
       "      <td>Portugal</td>\n",
       "      <td>2008</td>\n",
       "      <td>True</td>\n",
       "      <td>Tariff</td>\n",
       "      <td>AF</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>92</td>\n",
       "      <td>20128</td>\n",
       "      <td>Argentina: Non-automatic licensing requirement...</td>\n",
       "      <td>2009-03-25</td>\n",
       "      <td>Red</td>\n",
       "      <td>yes</td>\n",
       "      <td>2009-03-25</td>\n",
       "      <td>NaT</td>\n",
       "      <td>Argentina</td>\n",
       "      <td>Import licensing requirement</td>\n",
       "      <td>E1 Non-automatic import-licensing procedures o...</td>\n",
       "      <td>429, 439, 441, 476, 479, 381</td>\n",
       "      <td>731815, 841510, 841581, 841590, 843360, 852349...</td>\n",
       "      <td>Spain</td>\n",
       "      <td>2009</td>\n",
       "      <td>False</td>\n",
       "      <td>Non-Tariff</td>\n",
       "      <td>SA</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   State Act ID  Intervention ID  \\\n",
       "0            53            17542   \n",
       "1            53            17542   \n",
       "2            53            17542   \n",
       "3            53            17542   \n",
       "4            92            20128   \n",
       "\n",
       "                                     State Act Title Announcement Date  \\\n",
       "0  Zambia: Increase in fuel import duty to 25% fr...        2008-12-26   \n",
       "1  Zambia: Increase in fuel import duty to 25% fr...        2008-12-26   \n",
       "2  Zambia: Increase in fuel import duty to 25% fr...        2008-12-26   \n",
       "3  Zambia: Increase in fuel import duty to 25% fr...        2008-12-26   \n",
       "4  Argentina: Non-automatic licensing requirement...        2009-03-25   \n",
       "\n",
       "  GTA_Evaluation Currently in force Inception Date Removal Date  \\\n",
       "0            Red                yes     2008-12-26          NaT   \n",
       "1            Red                yes     2008-12-26          NaT   \n",
       "2            Red                yes     2008-12-26          NaT   \n",
       "3            Red                yes     2008-12-26          NaT   \n",
       "4            Red                yes     2009-03-25          NaT   \n",
       "\n",
       "  Implementing Jurisdiction             Intervention Type  \\\n",
       "0                    Zambia                 Import tariff   \n",
       "1                    Zambia                 Import tariff   \n",
       "2                    Zambia                 Import tariff   \n",
       "3                    Zambia                 Import tariff   \n",
       "4                 Argentina  Import licensing requirement   \n",
       "\n",
       "                                        MAST chapter  \\\n",
       "0                                    Tariff measures   \n",
       "1                                    Tariff measures   \n",
       "2                                    Tariff measures   \n",
       "3                                    Tariff measures   \n",
       "4  E1 Non-automatic import-licensing procedures o...   \n",
       "\n",
       "               Affected Sectors  \\\n",
       "0                           333   \n",
       "1                           333   \n",
       "2                           333   \n",
       "3                           333   \n",
       "4  429, 439, 441, 476, 479, 381   \n",
       "\n",
       "                                   Affected Products Affected Jurisdiction  \\\n",
       "0                                     271012, 271019                France   \n",
       "1                                     271012, 271019  United Arab Emirates   \n",
       "2                                             271019        United Kingdom   \n",
       "3                                     271012, 271019              Portugal   \n",
       "4  731815, 841510, 841581, 841590, 843360, 852349...                 Spain   \n",
       "\n",
       "   announcement_year   mask Trade Measure Type impl_continent  \n",
       "0               2008   True             Tariff             AF  \n",
       "1               2008   True             Tariff             AF  \n",
       "2               2008   True             Tariff             AF  \n",
       "3               2008   True             Tariff             AF  \n",
       "4               2009  False         Non-Tariff             SA  "
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_trade.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "hideCode": false,
    "hidePrompt": false
   },
   "source": [
    "## Start of analysis after milestones:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {
    "hideCode": false,
    "hidePrompt": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>State Act ID</th>\n",
       "      <th>Intervention ID</th>\n",
       "      <th>State Act Title</th>\n",
       "      <th>Announcement Date</th>\n",
       "      <th>GTA_Evaluation</th>\n",
       "      <th>Currently in force</th>\n",
       "      <th>Inception Date</th>\n",
       "      <th>Removal Date</th>\n",
       "      <th>Implementing Jurisdiction</th>\n",
       "      <th>Intervention Type</th>\n",
       "      <th>MAST chapter</th>\n",
       "      <th>Affected Sectors</th>\n",
       "      <th>Affected Products</th>\n",
       "      <th>Affected Jurisdiction</th>\n",
       "      <th>announcement_year</th>\n",
       "      <th>mask</th>\n",
       "      <th>Trade Measure Type</th>\n",
       "      <th>impl_continent</th>\n",
       "      <th>sector_string</th>\n",
       "      <th>sector_list</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>53</td>\n",
       "      <td>17542</td>\n",
       "      <td>Zambia: Increase in fuel import duty to 25% fr...</td>\n",
       "      <td>2008-12-26</td>\n",
       "      <td>Red</td>\n",
       "      <td>yes</td>\n",
       "      <td>2008-12-26</td>\n",
       "      <td>NaT</td>\n",
       "      <td>Zambia</td>\n",
       "      <td>Import tariff</td>\n",
       "      <td>Tariff measures</td>\n",
       "      <td>333</td>\n",
       "      <td>271012, 271019</td>\n",
       "      <td>France</td>\n",
       "      <td>2008</td>\n",
       "      <td>True</td>\n",
       "      <td>Tariff</td>\n",
       "      <td>AF</td>\n",
       "      <td>333</td>\n",
       "      <td>[333]</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>53</td>\n",
       "      <td>17542</td>\n",
       "      <td>Zambia: Increase in fuel import duty to 25% fr...</td>\n",
       "      <td>2008-12-26</td>\n",
       "      <td>Red</td>\n",
       "      <td>yes</td>\n",
       "      <td>2008-12-26</td>\n",
       "      <td>NaT</td>\n",
       "      <td>Zambia</td>\n",
       "      <td>Import tariff</td>\n",
       "      <td>Tariff measures</td>\n",
       "      <td>333</td>\n",
       "      <td>271012, 271019</td>\n",
       "      <td>United Arab Emirates</td>\n",
       "      <td>2008</td>\n",
       "      <td>True</td>\n",
       "      <td>Tariff</td>\n",
       "      <td>AF</td>\n",
       "      <td>333</td>\n",
       "      <td>[333]</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>53</td>\n",
       "      <td>17542</td>\n",
       "      <td>Zambia: Increase in fuel import duty to 25% fr...</td>\n",
       "      <td>2008-12-26</td>\n",
       "      <td>Red</td>\n",
       "      <td>yes</td>\n",
       "      <td>2008-12-26</td>\n",
       "      <td>NaT</td>\n",
       "      <td>Zambia</td>\n",
       "      <td>Import tariff</td>\n",
       "      <td>Tariff measures</td>\n",
       "      <td>333</td>\n",
       "      <td>271019</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>2008</td>\n",
       "      <td>True</td>\n",
       "      <td>Tariff</td>\n",
       "      <td>AF</td>\n",
       "      <td>333</td>\n",
       "      <td>[333]</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>53</td>\n",
       "      <td>17542</td>\n",
       "      <td>Zambia: Increase in fuel import duty to 25% fr...</td>\n",
       "      <td>2008-12-26</td>\n",
       "      <td>Red</td>\n",
       "      <td>yes</td>\n",
       "      <td>2008-12-26</td>\n",
       "      <td>NaT</td>\n",
       "      <td>Zambia</td>\n",
       "      <td>Import tariff</td>\n",
       "      <td>Tariff measures</td>\n",
       "      <td>333</td>\n",
       "      <td>271012, 271019</td>\n",
       "      <td>Portugal</td>\n",
       "      <td>2008</td>\n",
       "      <td>True</td>\n",
       "      <td>Tariff</td>\n",
       "      <td>AF</td>\n",
       "      <td>333</td>\n",
       "      <td>[333]</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>92</td>\n",
       "      <td>20128</td>\n",
       "      <td>Argentina: Non-automatic licensing requirement...</td>\n",
       "      <td>2009-03-25</td>\n",
       "      <td>Red</td>\n",
       "      <td>yes</td>\n",
       "      <td>2009-03-25</td>\n",
       "      <td>NaT</td>\n",
       "      <td>Argentina</td>\n",
       "      <td>Import licensing requirement</td>\n",
       "      <td>E1 Non-automatic import-licensing procedures o...</td>\n",
       "      <td>429, 439, 441, 476, 479, 381</td>\n",
       "      <td>731815, 841510, 841581, 841590, 843360, 852349...</td>\n",
       "      <td>Spain</td>\n",
       "      <td>2009</td>\n",
       "      <td>False</td>\n",
       "      <td>Non-Tariff</td>\n",
       "      <td>SA</td>\n",
       "      <td>429, 439, 441, 476, 479, 381</td>\n",
       "      <td>[429,  439,  441,  476,  479,  381]</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   State Act ID  Intervention ID  \\\n",
       "0            53            17542   \n",
       "1            53            17542   \n",
       "2            53            17542   \n",
       "3            53            17542   \n",
       "4            92            20128   \n",
       "\n",
       "                                     State Act Title Announcement Date  \\\n",
       "0  Zambia: Increase in fuel import duty to 25% fr...        2008-12-26   \n",
       "1  Zambia: Increase in fuel import duty to 25% fr...        2008-12-26   \n",
       "2  Zambia: Increase in fuel import duty to 25% fr...        2008-12-26   \n",
       "3  Zambia: Increase in fuel import duty to 25% fr...        2008-12-26   \n",
       "4  Argentina: Non-automatic licensing requirement...        2009-03-25   \n",
       "\n",
       "  GTA_Evaluation Currently in force Inception Date Removal Date  \\\n",
       "0            Red                yes     2008-12-26          NaT   \n",
       "1            Red                yes     2008-12-26          NaT   \n",
       "2            Red                yes     2008-12-26          NaT   \n",
       "3            Red                yes     2008-12-26          NaT   \n",
       "4            Red                yes     2009-03-25          NaT   \n",
       "\n",
       "  Implementing Jurisdiction             Intervention Type  \\\n",
       "0                    Zambia                 Import tariff   \n",
       "1                    Zambia                 Import tariff   \n",
       "2                    Zambia                 Import tariff   \n",
       "3                    Zambia                 Import tariff   \n",
       "4                 Argentina  Import licensing requirement   \n",
       "\n",
       "                                        MAST chapter  \\\n",
       "0                                    Tariff measures   \n",
       "1                                    Tariff measures   \n",
       "2                                    Tariff measures   \n",
       "3                                    Tariff measures   \n",
       "4  E1 Non-automatic import-licensing procedures o...   \n",
       "\n",
       "               Affected Sectors  \\\n",
       "0                           333   \n",
       "1                           333   \n",
       "2                           333   \n",
       "3                           333   \n",
       "4  429, 439, 441, 476, 479, 381   \n",
       "\n",
       "                                   Affected Products Affected Jurisdiction  \\\n",
       "0                                     271012, 271019                France   \n",
       "1                                     271012, 271019  United Arab Emirates   \n",
       "2                                             271019        United Kingdom   \n",
       "3                                     271012, 271019              Portugal   \n",
       "4  731815, 841510, 841581, 841590, 843360, 852349...                 Spain   \n",
       "\n",
       "   announcement_year   mask Trade Measure Type impl_continent  \\\n",
       "0               2008   True             Tariff             AF   \n",
       "1               2008   True             Tariff             AF   \n",
       "2               2008   True             Tariff             AF   \n",
       "3               2008   True             Tariff             AF   \n",
       "4               2009  False         Non-Tariff             SA   \n",
       "\n",
       "                  sector_string                          sector_list  \n",
       "0                           333                                [333]  \n",
       "1                           333                                [333]  \n",
       "2                           333                                [333]  \n",
       "3                           333                                [333]  \n",
       "4  429, 439, 441, 476, 479, 381  [429,  439,  441,  476,  479,  381]  "
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_trade['sector_string'] = df_trade['Affected Sectors']\n",
    "def make_string(x):\n",
    "    if type(x) is not str:\n",
    "        return str(x)\n",
    "    else:\n",
    "        return x\n",
    "        \n",
    "        \n",
    "    \n",
    "df_trade[\"sector_string\"] = df_trade[\"sector_string\"].apply(make_string)\n",
    "df_trade['sector_list'] = df_trade['sector_string'].str.split(\",\")\n",
    "df_trade.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "hideCode": false,
    "hidePrompt": false
   },
   "source": [
    "**df_new is the dataframe with the expoded sector_list column**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {
    "hideCode": false,
    "hidePrompt": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>State Act ID</th>\n",
       "      <th>Intervention ID</th>\n",
       "      <th>State Act Title</th>\n",
       "      <th>Announcement Date</th>\n",
       "      <th>GTA_Evaluation</th>\n",
       "      <th>Currently in force</th>\n",
       "      <th>Inception Date</th>\n",
       "      <th>Removal Date</th>\n",
       "      <th>Implementing Jurisdiction</th>\n",
       "      <th>Intervention Type</th>\n",
       "      <th>MAST chapter</th>\n",
       "      <th>Affected Sectors</th>\n",
       "      <th>Affected Products</th>\n",
       "      <th>Affected Jurisdiction</th>\n",
       "      <th>announcement_year</th>\n",
       "      <th>mask</th>\n",
       "      <th>Trade Measure Type</th>\n",
       "      <th>impl_continent</th>\n",
       "      <th>sector_string</th>\n",
       "      <th>sector_list</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>53</td>\n",
       "      <td>17542</td>\n",
       "      <td>Zambia: Increase in fuel import duty to 25% fr...</td>\n",
       "      <td>2008-12-26</td>\n",
       "      <td>Red</td>\n",
       "      <td>yes</td>\n",
       "      <td>2008-12-26</td>\n",
       "      <td>NaT</td>\n",
       "      <td>Zambia</td>\n",
       "      <td>Import tariff</td>\n",
       "      <td>Tariff measures</td>\n",
       "      <td>333</td>\n",
       "      <td>271012, 271019</td>\n",
       "      <td>France</td>\n",
       "      <td>2008</td>\n",
       "      <td>True</td>\n",
       "      <td>Tariff</td>\n",
       "      <td>AF</td>\n",
       "      <td>333</td>\n",
       "      <td>333</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>53</td>\n",
       "      <td>17542</td>\n",
       "      <td>Zambia: Increase in fuel import duty to 25% fr...</td>\n",
       "      <td>2008-12-26</td>\n",
       "      <td>Red</td>\n",
       "      <td>yes</td>\n",
       "      <td>2008-12-26</td>\n",
       "      <td>NaT</td>\n",
       "      <td>Zambia</td>\n",
       "      <td>Import tariff</td>\n",
       "      <td>Tariff measures</td>\n",
       "      <td>333</td>\n",
       "      <td>271012, 271019</td>\n",
       "      <td>United Arab Emirates</td>\n",
       "      <td>2008</td>\n",
       "      <td>True</td>\n",
       "      <td>Tariff</td>\n",
       "      <td>AF</td>\n",
       "      <td>333</td>\n",
       "      <td>333</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>53</td>\n",
       "      <td>17542</td>\n",
       "      <td>Zambia: Increase in fuel import duty to 25% fr...</td>\n",
       "      <td>2008-12-26</td>\n",
       "      <td>Red</td>\n",
       "      <td>yes</td>\n",
       "      <td>2008-12-26</td>\n",
       "      <td>NaT</td>\n",
       "      <td>Zambia</td>\n",
       "      <td>Import tariff</td>\n",
       "      <td>Tariff measures</td>\n",
       "      <td>333</td>\n",
       "      <td>271019</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>2008</td>\n",
       "      <td>True</td>\n",
       "      <td>Tariff</td>\n",
       "      <td>AF</td>\n",
       "      <td>333</td>\n",
       "      <td>333</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>53</td>\n",
       "      <td>17542</td>\n",
       "      <td>Zambia: Increase in fuel import duty to 25% fr...</td>\n",
       "      <td>2008-12-26</td>\n",
       "      <td>Red</td>\n",
       "      <td>yes</td>\n",
       "      <td>2008-12-26</td>\n",
       "      <td>NaT</td>\n",
       "      <td>Zambia</td>\n",
       "      <td>Import tariff</td>\n",
       "      <td>Tariff measures</td>\n",
       "      <td>333</td>\n",
       "      <td>271012, 271019</td>\n",
       "      <td>Portugal</td>\n",
       "      <td>2008</td>\n",
       "      <td>True</td>\n",
       "      <td>Tariff</td>\n",
       "      <td>AF</td>\n",
       "      <td>333</td>\n",
       "      <td>333</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>92</td>\n",
       "      <td>20128</td>\n",
       "      <td>Argentina: Non-automatic licensing requirement...</td>\n",
       "      <td>2009-03-25</td>\n",
       "      <td>Red</td>\n",
       "      <td>yes</td>\n",
       "      <td>2009-03-25</td>\n",
       "      <td>NaT</td>\n",
       "      <td>Argentina</td>\n",
       "      <td>Import licensing requirement</td>\n",
       "      <td>E1 Non-automatic import-licensing procedures o...</td>\n",
       "      <td>429, 439, 441, 476, 479, 381</td>\n",
       "      <td>731815, 841510, 841581, 841590, 843360, 852349...</td>\n",
       "      <td>Spain</td>\n",
       "      <td>2009</td>\n",
       "      <td>False</td>\n",
       "      <td>Non-Tariff</td>\n",
       "      <td>SA</td>\n",
       "      <td>429, 439, 441, 476, 479, 381</td>\n",
       "      <td>429</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   State Act ID  Intervention ID  \\\n",
       "0            53            17542   \n",
       "1            53            17542   \n",
       "2            53            17542   \n",
       "3            53            17542   \n",
       "4            92            20128   \n",
       "\n",
       "                                     State Act Title Announcement Date  \\\n",
       "0  Zambia: Increase in fuel import duty to 25% fr...        2008-12-26   \n",
       "1  Zambia: Increase in fuel import duty to 25% fr...        2008-12-26   \n",
       "2  Zambia: Increase in fuel import duty to 25% fr...        2008-12-26   \n",
       "3  Zambia: Increase in fuel import duty to 25% fr...        2008-12-26   \n",
       "4  Argentina: Non-automatic licensing requirement...        2009-03-25   \n",
       "\n",
       "  GTA_Evaluation Currently in force Inception Date Removal Date  \\\n",
       "0            Red                yes     2008-12-26          NaT   \n",
       "1            Red                yes     2008-12-26          NaT   \n",
       "2            Red                yes     2008-12-26          NaT   \n",
       "3            Red                yes     2008-12-26          NaT   \n",
       "4            Red                yes     2009-03-25          NaT   \n",
       "\n",
       "  Implementing Jurisdiction             Intervention Type  \\\n",
       "0                    Zambia                 Import tariff   \n",
       "1                    Zambia                 Import tariff   \n",
       "2                    Zambia                 Import tariff   \n",
       "3                    Zambia                 Import tariff   \n",
       "4                 Argentina  Import licensing requirement   \n",
       "\n",
       "                                        MAST chapter  \\\n",
       "0                                    Tariff measures   \n",
       "1                                    Tariff measures   \n",
       "2                                    Tariff measures   \n",
       "3                                    Tariff measures   \n",
       "4  E1 Non-automatic import-licensing procedures o...   \n",
       "\n",
       "               Affected Sectors  \\\n",
       "0                           333   \n",
       "1                           333   \n",
       "2                           333   \n",
       "3                           333   \n",
       "4  429, 439, 441, 476, 479, 381   \n",
       "\n",
       "                                   Affected Products Affected Jurisdiction  \\\n",
       "0                                     271012, 271019                France   \n",
       "1                                     271012, 271019  United Arab Emirates   \n",
       "2                                             271019        United Kingdom   \n",
       "3                                     271012, 271019              Portugal   \n",
       "4  731815, 841510, 841581, 841590, 843360, 852349...                 Spain   \n",
       "\n",
       "   announcement_year   mask Trade Measure Type impl_continent  \\\n",
       "0               2008   True             Tariff             AF   \n",
       "1               2008   True             Tariff             AF   \n",
       "2               2008   True             Tariff             AF   \n",
       "3               2008   True             Tariff             AF   \n",
       "4               2009  False         Non-Tariff             SA   \n",
       "\n",
       "                  sector_string sector_list  \n",
       "0                           333         333  \n",
       "1                           333         333  \n",
       "2                           333         333  \n",
       "3                           333         333  \n",
       "4  429, 439, 441, 476, 479, 381         429  "
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_new = df_trade.explode('sector_list')\n",
    "df_new.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "hideCode": false,
    "hidePrompt": false
   },
   "source": [
    "# G20 stuff"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {
    "hideCode": false,
    "hidePrompt": false
   },
   "outputs": [],
   "source": [
    "# this list has all the G20 countries, some repeated\n",
    "g20_list = countrygroups.G20.names\n",
    "g20_list.extend(countrygroups.EUROPEAN_UNION.names)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {
    "hideCode": false,
    "hidePrompt": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>State Act ID</th>\n",
       "      <th>Intervention ID</th>\n",
       "      <th>State Act Title</th>\n",
       "      <th>Announcement Date</th>\n",
       "      <th>GTA_Evaluation</th>\n",
       "      <th>Currently in force</th>\n",
       "      <th>Inception Date</th>\n",
       "      <th>Removal Date</th>\n",
       "      <th>Implementing Jurisdiction</th>\n",
       "      <th>Intervention Type</th>\n",
       "      <th>MAST chapter</th>\n",
       "      <th>Affected Sectors</th>\n",
       "      <th>Affected Products</th>\n",
       "      <th>Affected Jurisdiction</th>\n",
       "      <th>announcement_year</th>\n",
       "      <th>mask</th>\n",
       "      <th>Trade Measure Type</th>\n",
       "      <th>impl_continent</th>\n",
       "      <th>sector_string</th>\n",
       "      <th>sector_list</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>92</td>\n",
       "      <td>20128</td>\n",
       "      <td>Argentina: Non-automatic licensing requirement...</td>\n",
       "      <td>2009-03-25</td>\n",
       "      <td>Red</td>\n",
       "      <td>yes</td>\n",
       "      <td>2009-03-25</td>\n",
       "      <td>NaT</td>\n",
       "      <td>Argentina</td>\n",
       "      <td>Import licensing requirement</td>\n",
       "      <td>E1 Non-automatic import-licensing procedures o...</td>\n",
       "      <td>429, 439, 441, 476, 479, 381</td>\n",
       "      <td>731815, 841510, 841581, 841590, 843360, 852349...</td>\n",
       "      <td>Spain</td>\n",
       "      <td>2009</td>\n",
       "      <td>False</td>\n",
       "      <td>Non-Tariff</td>\n",
       "      <td>SA</td>\n",
       "      <td>429, 439, 441, 476, 479, 381</td>\n",
       "      <td>429</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>92</td>\n",
       "      <td>20128</td>\n",
       "      <td>Argentina: Non-automatic licensing requirement...</td>\n",
       "      <td>2009-03-25</td>\n",
       "      <td>Red</td>\n",
       "      <td>yes</td>\n",
       "      <td>2009-03-25</td>\n",
       "      <td>NaT</td>\n",
       "      <td>Argentina</td>\n",
       "      <td>Import licensing requirement</td>\n",
       "      <td>E1 Non-automatic import-licensing procedures o...</td>\n",
       "      <td>429, 439, 441, 476, 479, 381</td>\n",
       "      <td>731815, 841510, 841581, 841590, 843360, 852349...</td>\n",
       "      <td>Spain</td>\n",
       "      <td>2009</td>\n",
       "      <td>False</td>\n",
       "      <td>Non-Tariff</td>\n",
       "      <td>SA</td>\n",
       "      <td>429, 439, 441, 476, 479, 381</td>\n",
       "      <td>439</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>92</td>\n",
       "      <td>20128</td>\n",
       "      <td>Argentina: Non-automatic licensing requirement...</td>\n",
       "      <td>2009-03-25</td>\n",
       "      <td>Red</td>\n",
       "      <td>yes</td>\n",
       "      <td>2009-03-25</td>\n",
       "      <td>NaT</td>\n",
       "      <td>Argentina</td>\n",
       "      <td>Import licensing requirement</td>\n",
       "      <td>E1 Non-automatic import-licensing procedures o...</td>\n",
       "      <td>429, 439, 441, 476, 479, 381</td>\n",
       "      <td>731815, 841510, 841581, 841590, 843360, 852349...</td>\n",
       "      <td>Spain</td>\n",
       "      <td>2009</td>\n",
       "      <td>False</td>\n",
       "      <td>Non-Tariff</td>\n",
       "      <td>SA</td>\n",
       "      <td>429, 439, 441, 476, 479, 381</td>\n",
       "      <td>441</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>92</td>\n",
       "      <td>20128</td>\n",
       "      <td>Argentina: Non-automatic licensing requirement...</td>\n",
       "      <td>2009-03-25</td>\n",
       "      <td>Red</td>\n",
       "      <td>yes</td>\n",
       "      <td>2009-03-25</td>\n",
       "      <td>NaT</td>\n",
       "      <td>Argentina</td>\n",
       "      <td>Import licensing requirement</td>\n",
       "      <td>E1 Non-automatic import-licensing procedures o...</td>\n",
       "      <td>429, 439, 441, 476, 479, 381</td>\n",
       "      <td>731815, 841510, 841581, 841590, 843360, 852349...</td>\n",
       "      <td>Spain</td>\n",
       "      <td>2009</td>\n",
       "      <td>False</td>\n",
       "      <td>Non-Tariff</td>\n",
       "      <td>SA</td>\n",
       "      <td>429, 439, 441, 476, 479, 381</td>\n",
       "      <td>476</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>92</td>\n",
       "      <td>20128</td>\n",
       "      <td>Argentina: Non-automatic licensing requirement...</td>\n",
       "      <td>2009-03-25</td>\n",
       "      <td>Red</td>\n",
       "      <td>yes</td>\n",
       "      <td>2009-03-25</td>\n",
       "      <td>NaT</td>\n",
       "      <td>Argentina</td>\n",
       "      <td>Import licensing requirement</td>\n",
       "      <td>E1 Non-automatic import-licensing procedures o...</td>\n",
       "      <td>429, 439, 441, 476, 479, 381</td>\n",
       "      <td>731815, 841510, 841581, 841590, 843360, 852349...</td>\n",
       "      <td>Spain</td>\n",
       "      <td>2009</td>\n",
       "      <td>False</td>\n",
       "      <td>Non-Tariff</td>\n",
       "      <td>SA</td>\n",
       "      <td>429, 439, 441, 476, 479, 381</td>\n",
       "      <td>479</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   State Act ID  Intervention ID  \\\n",
       "4            92            20128   \n",
       "4            92            20128   \n",
       "4            92            20128   \n",
       "4            92            20128   \n",
       "4            92            20128   \n",
       "\n",
       "                                     State Act Title Announcement Date  \\\n",
       "4  Argentina: Non-automatic licensing requirement...        2009-03-25   \n",
       "4  Argentina: Non-automatic licensing requirement...        2009-03-25   \n",
       "4  Argentina: Non-automatic licensing requirement...        2009-03-25   \n",
       "4  Argentina: Non-automatic licensing requirement...        2009-03-25   \n",
       "4  Argentina: Non-automatic licensing requirement...        2009-03-25   \n",
       "\n",
       "  GTA_Evaluation Currently in force Inception Date Removal Date  \\\n",
       "4            Red                yes     2009-03-25          NaT   \n",
       "4            Red                yes     2009-03-25          NaT   \n",
       "4            Red                yes     2009-03-25          NaT   \n",
       "4            Red                yes     2009-03-25          NaT   \n",
       "4            Red                yes     2009-03-25          NaT   \n",
       "\n",
       "  Implementing Jurisdiction             Intervention Type  \\\n",
       "4                 Argentina  Import licensing requirement   \n",
       "4                 Argentina  Import licensing requirement   \n",
       "4                 Argentina  Import licensing requirement   \n",
       "4                 Argentina  Import licensing requirement   \n",
       "4                 Argentina  Import licensing requirement   \n",
       "\n",
       "                                        MAST chapter  \\\n",
       "4  E1 Non-automatic import-licensing procedures o...   \n",
       "4  E1 Non-automatic import-licensing procedures o...   \n",
       "4  E1 Non-automatic import-licensing procedures o...   \n",
       "4  E1 Non-automatic import-licensing procedures o...   \n",
       "4  E1 Non-automatic import-licensing procedures o...   \n",
       "\n",
       "               Affected Sectors  \\\n",
       "4  429, 439, 441, 476, 479, 381   \n",
       "4  429, 439, 441, 476, 479, 381   \n",
       "4  429, 439, 441, 476, 479, 381   \n",
       "4  429, 439, 441, 476, 479, 381   \n",
       "4  429, 439, 441, 476, 479, 381   \n",
       "\n",
       "                                   Affected Products Affected Jurisdiction  \\\n",
       "4  731815, 841510, 841581, 841590, 843360, 852349...                 Spain   \n",
       "4  731815, 841510, 841581, 841590, 843360, 852349...                 Spain   \n",
       "4  731815, 841510, 841581, 841590, 843360, 852349...                 Spain   \n",
       "4  731815, 841510, 841581, 841590, 843360, 852349...                 Spain   \n",
       "4  731815, 841510, 841581, 841590, 843360, 852349...                 Spain   \n",
       "\n",
       "   announcement_year   mask Trade Measure Type impl_continent  \\\n",
       "4               2009  False         Non-Tariff             SA   \n",
       "4               2009  False         Non-Tariff             SA   \n",
       "4               2009  False         Non-Tariff             SA   \n",
       "4               2009  False         Non-Tariff             SA   \n",
       "4               2009  False         Non-Tariff             SA   \n",
       "\n",
       "                  sector_string sector_list  \n",
       "4  429, 439, 441, 476, 479, 381         429  \n",
       "4  429, 439, 441, 476, 479, 381         439  \n",
       "4  429, 439, 441, 476, 479, 381         441  \n",
       "4  429, 439, 441, 476, 479, 381         476  \n",
       "4  429, 439, 441, 476, 479, 381         479  "
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# df_new_g20 is the one with has just G20 countries and has expoded sector_list\n",
    "df_new_g20 = df_new[df_new['Implementing Jurisdiction'].isin(g20_list) & df_new['Affected Jurisdiction'].isin(g20_list)]\n",
    "df_new_g20.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "hideCode": false,
    "hidePrompt": false
   },
   "outputs": [],
   "source": [
    "for sector in sector_string_list:\n",
    "    df_trade[sector] = df_trade['sector_string'].str.contains(pat=sector)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {
    "hideCode": false,
    "hidePrompt": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>sectorID</th>\n",
       "      <th>sector</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>011</td>\n",
       "      <td>cereals</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>012</td>\n",
       "      <td>vegetables</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>013</td>\n",
       "      <td>fruits and nuts</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>014</td>\n",
       "      <td>oilseeds and oleaginous fruits</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>015</td>\n",
       "      <td>edible roots and tubers with high starch or in...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>324</th>\n",
       "      <td>972</td>\n",
       "      <td>beauty and physical well-being services</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>325</th>\n",
       "      <td>973</td>\n",
       "      <td>funeral, cremation and undertaking services</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>326</th>\n",
       "      <td>979</td>\n",
       "      <td>other miscellaneous services</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>327</th>\n",
       "      <td>980</td>\n",
       "      <td>domestic services</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>328</th>\n",
       "      <td>990</td>\n",
       "      <td>services provided by extraterritorial organiza...</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>329 rows × 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "    sectorID                                             sector\n",
       "0        011                                            cereals\n",
       "1        012                                         vegetables\n",
       "2        013                                    fruits and nuts\n",
       "3        014                     oilseeds and oleaginous fruits\n",
       "4        015  edible roots and tubers with high starch or in...\n",
       "..       ...                                                ...\n",
       "324      972            beauty and physical well-being services\n",
       "325      973        funeral, cremation and undertaking services\n",
       "326      979                       other miscellaneous services\n",
       "327      980                                  domestic services\n",
       "328      990  services provided by extraterritorial organiza...\n",
       "\n",
       "[329 rows x 2 columns]"
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sector_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {
    "hideCode": false,
    "hidePrompt": false
   },
   "outputs": [],
   "source": [
    "#sector_df['IDstring'] = sector_df['sectorID'].apply(make_string)\n",
    "sector_string_list = sector_df['sectorID'].apply(make_string).to_list()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {
    "hideCode": false,
    "hidePrompt": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['011',\n",
       " '012',\n",
       " '013',\n",
       " '014',\n",
       " '015',\n",
       " '016',\n",
       " '017',\n",
       " '018',\n",
       " '019',\n",
       " '021',\n",
       " '022',\n",
       " '023',\n",
       " '024',\n",
       " '029',\n",
       " '031',\n",
       " '032',\n",
       " '041',\n",
       " '042',\n",
       " '043',\n",
       " '044',\n",
       " '045',\n",
       " '049',\n",
       " '110',\n",
       " '120',\n",
       " '130',\n",
       " '141',\n",
       " '142',\n",
       " '151',\n",
       " '152',\n",
       " '153',\n",
       " '154',\n",
       " '161',\n",
       " '162',\n",
       " '163',\n",
       " '171',\n",
       " '172',\n",
       " '173',\n",
       " '174',\n",
       " '180',\n",
       " '211',\n",
       " '212',\n",
       " '213',\n",
       " '214',\n",
       " '215',\n",
       " '216',\n",
       " '217',\n",
       " '218',\n",
       " '219',\n",
       " '221',\n",
       " '222',\n",
       " '223',\n",
       " '231',\n",
       " '232',\n",
       " '233',\n",
       " '234',\n",
       " '235',\n",
       " '236',\n",
       " '237',\n",
       " '239',\n",
       " '241',\n",
       " '242',\n",
       " '243',\n",
       " '244',\n",
       " '250',\n",
       " '261',\n",
       " '262',\n",
       " '263',\n",
       " '264',\n",
       " '265',\n",
       " '266',\n",
       " '267',\n",
       " '268',\n",
       " '271',\n",
       " '272',\n",
       " '273',\n",
       " '279',\n",
       " '281',\n",
       " '282',\n",
       " '283',\n",
       " '291',\n",
       " '292',\n",
       " '293',\n",
       " '294',\n",
       " '295',\n",
       " '296',\n",
       " '311',\n",
       " '312',\n",
       " '313',\n",
       " '314',\n",
       " '315',\n",
       " '316',\n",
       " '317',\n",
       " '319',\n",
       " '321',\n",
       " '322',\n",
       " '323',\n",
       " '324',\n",
       " '325',\n",
       " '326',\n",
       " '327',\n",
       " '328',\n",
       " '331',\n",
       " '332',\n",
       " '333',\n",
       " '334',\n",
       " '335',\n",
       " '336',\n",
       " '337',\n",
       " '341',\n",
       " '342',\n",
       " '343',\n",
       " '344',\n",
       " '345',\n",
       " '346',\n",
       " '347',\n",
       " '348',\n",
       " '351',\n",
       " '352',\n",
       " '353',\n",
       " '354',\n",
       " '355',\n",
       " '361',\n",
       " '362',\n",
       " '363',\n",
       " '364',\n",
       " '369',\n",
       " '371',\n",
       " '372',\n",
       " '373',\n",
       " '374',\n",
       " '375',\n",
       " '376',\n",
       " '379',\n",
       " '381',\n",
       " '382',\n",
       " '383',\n",
       " '384',\n",
       " '385',\n",
       " '386',\n",
       " '387',\n",
       " '389',\n",
       " '391',\n",
       " '392',\n",
       " '393',\n",
       " '399',\n",
       " '411',\n",
       " '412',\n",
       " '413',\n",
       " '414',\n",
       " '415',\n",
       " '416',\n",
       " '421',\n",
       " '422',\n",
       " '423',\n",
       " '429',\n",
       " '431',\n",
       " '432',\n",
       " '433',\n",
       " '434',\n",
       " '435',\n",
       " '439',\n",
       " '441',\n",
       " '442',\n",
       " '443',\n",
       " '444',\n",
       " '445',\n",
       " '446',\n",
       " '447',\n",
       " '448',\n",
       " '449',\n",
       " '451',\n",
       " '452',\n",
       " '461',\n",
       " '462',\n",
       " '463',\n",
       " '464',\n",
       " '465',\n",
       " '469',\n",
       " '471',\n",
       " '472',\n",
       " '473',\n",
       " '474',\n",
       " '475',\n",
       " '476',\n",
       " '478',\n",
       " '479',\n",
       " '481',\n",
       " '482',\n",
       " '483',\n",
       " '484',\n",
       " '491',\n",
       " '492',\n",
       " '493',\n",
       " '494',\n",
       " '495',\n",
       " '496',\n",
       " '499',\n",
       " '531',\n",
       " '532',\n",
       " '541',\n",
       " '542',\n",
       " '543',\n",
       " '544',\n",
       " '545',\n",
       " '546',\n",
       " '547',\n",
       " '611',\n",
       " '612',\n",
       " '621',\n",
       " '622',\n",
       " '623',\n",
       " '624',\n",
       " '625',\n",
       " '631',\n",
       " '632',\n",
       " '633',\n",
       " '634',\n",
       " '641',\n",
       " '642',\n",
       " '651',\n",
       " '652',\n",
       " '653',\n",
       " '660',\n",
       " '671',\n",
       " '672',\n",
       " '673',\n",
       " '674',\n",
       " '675',\n",
       " '676',\n",
       " '679',\n",
       " '680',\n",
       " '691',\n",
       " '692',\n",
       " '711',\n",
       " '712',\n",
       " '713',\n",
       " '714',\n",
       " '715',\n",
       " '716',\n",
       " '717',\n",
       " '721',\n",
       " '722',\n",
       " '731',\n",
       " '732',\n",
       " '733',\n",
       " '811',\n",
       " '812',\n",
       " '813',\n",
       " '814',\n",
       " '821',\n",
       " '822',\n",
       " '823',\n",
       " '824',\n",
       " '831',\n",
       " '832',\n",
       " '833',\n",
       " '834',\n",
       " '835',\n",
       " '836',\n",
       " '837',\n",
       " '838',\n",
       " '839',\n",
       " '841',\n",
       " '842',\n",
       " '843',\n",
       " '844',\n",
       " '845',\n",
       " '846',\n",
       " '851',\n",
       " '852',\n",
       " '853',\n",
       " '854',\n",
       " '855',\n",
       " '859',\n",
       " '861',\n",
       " '862',\n",
       " '863',\n",
       " '871',\n",
       " '872',\n",
       " '873',\n",
       " '881',\n",
       " '882',\n",
       " '883',\n",
       " '884',\n",
       " '885',\n",
       " '886',\n",
       " '887',\n",
       " '888',\n",
       " '889',\n",
       " '891',\n",
       " '892',\n",
       " '893',\n",
       " '894',\n",
       " '911',\n",
       " '912',\n",
       " '913',\n",
       " '921',\n",
       " '922',\n",
       " '923',\n",
       " '924',\n",
       " '925',\n",
       " '929',\n",
       " '931',\n",
       " '932',\n",
       " '933',\n",
       " '934',\n",
       " '935',\n",
       " '941',\n",
       " '942',\n",
       " '943',\n",
       " '944',\n",
       " '945',\n",
       " '949',\n",
       " '951',\n",
       " '952',\n",
       " '959',\n",
       " '961',\n",
       " '962',\n",
       " '963',\n",
       " '964',\n",
       " '965',\n",
       " '966',\n",
       " '969',\n",
       " '971',\n",
       " '972',\n",
       " '973',\n",
       " '979',\n",
       " '980',\n",
       " '990']"
      ]
     },
     "execution_count": 37,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sector_string_list"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "metadata": {
    "hideCode": false,
    "hidePrompt": false
   },
   "outputs": [],
   "source": [
    "for sector in sector_string_list:\n",
    "    df_trade[sector] = df_trade['sector_string'].str.contains(pat=sector)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {
    "hideCode": false,
    "hidePrompt": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>State Act ID</th>\n",
       "      <th>Intervention ID</th>\n",
       "      <th>State Act Title</th>\n",
       "      <th>Announcement Date</th>\n",
       "      <th>GTA_Evaluation</th>\n",
       "      <th>Currently in force</th>\n",
       "      <th>Inception Date</th>\n",
       "      <th>Removal Date</th>\n",
       "      <th>Implementing Jurisdiction</th>\n",
       "      <th>Intervention Type</th>\n",
       "      <th>...</th>\n",
       "      <th>964</th>\n",
       "      <th>965</th>\n",
       "      <th>966</th>\n",
       "      <th>969</th>\n",
       "      <th>971</th>\n",
       "      <th>972</th>\n",
       "      <th>973</th>\n",
       "      <th>979</th>\n",
       "      <th>980</th>\n",
       "      <th>990</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>53</td>\n",
       "      <td>17542</td>\n",
       "      <td>Zambia: Increase in fuel import duty to 25% fr...</td>\n",
       "      <td>2008-12-26</td>\n",
       "      <td>Red</td>\n",
       "      <td>yes</td>\n",
       "      <td>2008-12-26</td>\n",
       "      <td>NaT</td>\n",
       "      <td>Zambia</td>\n",
       "      <td>Import tariff</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>53</td>\n",
       "      <td>17542</td>\n",
       "      <td>Zambia: Increase in fuel import duty to 25% fr...</td>\n",
       "      <td>2008-12-26</td>\n",
       "      <td>Red</td>\n",
       "      <td>yes</td>\n",
       "      <td>2008-12-26</td>\n",
       "      <td>NaT</td>\n",
       "      <td>Zambia</td>\n",
       "      <td>Import tariff</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>53</td>\n",
       "      <td>17542</td>\n",
       "      <td>Zambia: Increase in fuel import duty to 25% fr...</td>\n",
       "      <td>2008-12-26</td>\n",
       "      <td>Red</td>\n",
       "      <td>yes</td>\n",
       "      <td>2008-12-26</td>\n",
       "      <td>NaT</td>\n",
       "      <td>Zambia</td>\n",
       "      <td>Import tariff</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>53</td>\n",
       "      <td>17542</td>\n",
       "      <td>Zambia: Increase in fuel import duty to 25% fr...</td>\n",
       "      <td>2008-12-26</td>\n",
       "      <td>Red</td>\n",
       "      <td>yes</td>\n",
       "      <td>2008-12-26</td>\n",
       "      <td>NaT</td>\n",
       "      <td>Zambia</td>\n",
       "      <td>Import tariff</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>92</td>\n",
       "      <td>20128</td>\n",
       "      <td>Argentina: Non-automatic licensing requirement...</td>\n",
       "      <td>2009-03-25</td>\n",
       "      <td>Red</td>\n",
       "      <td>yes</td>\n",
       "      <td>2009-03-25</td>\n",
       "      <td>NaT</td>\n",
       "      <td>Argentina</td>\n",
       "      <td>Import licensing requirement</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 349 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   State Act ID  Intervention ID  \\\n",
       "0            53            17542   \n",
       "1            53            17542   \n",
       "2            53            17542   \n",
       "3            53            17542   \n",
       "4            92            20128   \n",
       "\n",
       "                                     State Act Title Announcement Date  \\\n",
       "0  Zambia: Increase in fuel import duty to 25% fr...        2008-12-26   \n",
       "1  Zambia: Increase in fuel import duty to 25% fr...        2008-12-26   \n",
       "2  Zambia: Increase in fuel import duty to 25% fr...        2008-12-26   \n",
       "3  Zambia: Increase in fuel import duty to 25% fr...        2008-12-26   \n",
       "4  Argentina: Non-automatic licensing requirement...        2009-03-25   \n",
       "\n",
       "  GTA_Evaluation Currently in force Inception Date Removal Date  \\\n",
       "0            Red                yes     2008-12-26          NaT   \n",
       "1            Red                yes     2008-12-26          NaT   \n",
       "2            Red                yes     2008-12-26          NaT   \n",
       "3            Red                yes     2008-12-26          NaT   \n",
       "4            Red                yes     2009-03-25          NaT   \n",
       "\n",
       "  Implementing Jurisdiction             Intervention Type  ...    964    965  \\\n",
       "0                    Zambia                 Import tariff  ...  False  False   \n",
       "1                    Zambia                 Import tariff  ...  False  False   \n",
       "2                    Zambia                 Import tariff  ...  False  False   \n",
       "3                    Zambia                 Import tariff  ...  False  False   \n",
       "4                 Argentina  Import licensing requirement  ...  False  False   \n",
       "\n",
       "     966    969    971    972    973    979    980    990  \n",
       "0  False  False  False  False  False  False  False  False  \n",
       "1  False  False  False  False  False  False  False  False  \n",
       "2  False  False  False  False  False  False  False  False  \n",
       "3  False  False  False  False  False  False  False  False  \n",
       "4  False  False  False  False  False  False  False  False  \n",
       "\n",
       "[5 rows x 349 columns]"
      ]
     },
     "execution_count": 40,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_trade.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "hideCode": false,
    "hidePrompt": false
   },
   "source": [
    "## Sector stuff"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {
    "hideCode": false,
    "hidePrompt": false
   },
   "outputs": [],
   "source": [
    "sector_sums = []\n",
    "for sector in sector_string_list:\n",
    "    sector_sums.append(df_trade[sector].sum())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {
    "hideCode": false,
    "hidePrompt": false
   },
   "outputs": [],
   "source": [
    "sector_df['measure_count'] = sector_sums"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {
    "hideCode": false,
    "hidePrompt": false
   },
   "outputs": [],
   "source": [
    "sector_df['proportion_of_sectors'] = sector_df['measure_count'] / sector_df['measure_count'].sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {
    "hideCode": false,
    "hidePrompt": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>sectorID</th>\n",
       "      <th>sector</th>\n",
       "      <th>measure_count</th>\n",
       "      <th>proportion_of_sectors</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>011</td>\n",
       "      <td>cereals</td>\n",
       "      <td>8079</td>\n",
       "      <td>0.006190</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>012</td>\n",
       "      <td>vegetables</td>\n",
       "      <td>9561</td>\n",
       "      <td>0.007326</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>013</td>\n",
       "      <td>fruits and nuts</td>\n",
       "      <td>8202</td>\n",
       "      <td>0.006284</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>014</td>\n",
       "      <td>oilseeds and oleaginous fruits</td>\n",
       "      <td>4884</td>\n",
       "      <td>0.003742</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>015</td>\n",
       "      <td>edible roots and tubers with high starch or in...</td>\n",
       "      <td>3416</td>\n",
       "      <td>0.002617</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  sectorID                                             sector  measure_count  \\\n",
       "0      011                                            cereals           8079   \n",
       "1      012                                         vegetables           9561   \n",
       "2      013                                    fruits and nuts           8202   \n",
       "3      014                     oilseeds and oleaginous fruits           4884   \n",
       "4      015  edible roots and tubers with high starch or in...           3416   \n",
       "\n",
       "   proportion_of_sectors  \n",
       "0               0.006190  \n",
       "1               0.007326  \n",
       "2               0.006284  \n",
       "3               0.003742  \n",
       "4               0.002617  "
      ]
     },
     "execution_count": 44,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sector_df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "hideCode": false,
    "hidePrompt": false
   },
   "source": [
    "# G20 with boolians"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 165,
   "metadata": {},
   "outputs": [],
   "source": [
    "g20_list.append('United States of America')\n",
    "g20_list.append('Korea')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 172,
   "metadata": {},
   "outputs": [],
   "source": [
    "g20_list.append('Korea')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 194,
   "metadata": {
    "hideCode": false,
    "hidePrompt": false
   },
   "outputs": [],
   "source": [
    "df_trade_g20 = df_trade[df_trade['Implementing Jurisdiction'].isin(g20_list) & \n",
    "                        df_trade['Affected Jurisdiction'].isin(g20_list)]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 195,
   "metadata": {
    "hideCode": false,
    "hidePrompt": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['Argentina', 'Russia', 'United States of America',\n",
       "       'United Kingdom', 'Netherlands', 'Lithuania', 'Poland', 'Ireland',\n",
       "       'Italy', 'Latvia', 'Sweden', 'Spain', 'Portugal', 'Slovakia',\n",
       "       'Slovenia', 'Romania', 'Czechia', 'Denmark', 'Cyprus', 'Austria',\n",
       "       'Belgium', 'Bulgaria', 'Estonia', 'Germany', 'Hungary', 'Greece',\n",
       "       'France', 'Finland', 'Indonesia', 'Japan', 'India', 'South Africa',\n",
       "       'Saudi Arabia', 'Luxembourg', 'Croatia', 'China', 'Canada',\n",
       "       'Mexico', 'Australia', 'Brazil', 'Turkey', 'Malta'], dtype=object)"
      ]
     },
     "execution_count": 195,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_trade_g20[\"Implementing Jurisdiction\"].unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 197,
   "metadata": {
    "hideCode": false,
    "hidePrompt": false
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "//anaconda3/lib/python3.7/site-packages/ipykernel_launcher.py:2: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  \n"
     ]
    }
   ],
   "source": [
    "for sector in sector_string_list:\n",
    "    df_trade_g20[sector] = df_trade_g20[sector].astype(int)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 198,
   "metadata": {
    "hideCode": false,
    "hidePrompt": false
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "//anaconda3/lib/python3.7/site-packages/ipykernel_launcher.py:1: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  \"\"\"Entry point for launching an IPython kernel.\n",
      "//anaconda3/lib/python3.7/site-packages/ipykernel_launcher.py:2: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  \n"
     ]
    }
   ],
   "source": [
    "df_trade_g20['days'] = df_trade_g20['Removal Date'] - df_trade_g20['Inception Date']\n",
    "df_trade_g20['days'] = df_trade_g20['days'].dt.total_seconds() / (24.0 * 60.0 * 60.0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 199,
   "metadata": {},
   "outputs": [],
   "source": [
    "df_trade_g20 = df_trade_g20[df_trade_g20['days'] > 0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 202,
   "metadata": {
    "hideCode": false,
    "hidePrompt": false
   },
   "outputs": [],
   "source": [
    "features = ['Implementing Jurisdiction', 'Affected Jurisdiction', 'GTA_Evaluation']\n",
    "features.extend(sector_string_list)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 203,
   "metadata": {
    "hideCode": false,
    "hidePrompt": false
   },
   "outputs": [],
   "source": [
    "df_trade_g20 = df_trade_g20.dropna(subset=features)\n",
    "df_trade_g20 = df_trade_g20.dropna(subset=['Inception Date', 'Removal Date'])\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 204,
   "metadata": {
    "hideCode": false,
    "hidePrompt": false
   },
   "outputs": [],
   "source": [
    "from sklearn.feature_extraction import DictVectorizer\n",
    "from sklearn.preprocessing import StandardScaler"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 205,
   "metadata": {
    "hideCode": false,
    "hidePrompt": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([ 380.6       ,  490.93333333,  527.33333333, ...,  804.93333333,\n",
       "       1267.8       ,  685.        ])"
      ]
     },
     "execution_count": 205,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "\n",
    "\n",
    "X_train_dict_g20 = df_trade_g20[features].to_dict(orient=\"records\")\n",
    "y_train_g20 = df_trade_g20[\"days\"]\n",
    "\n",
    "\n",
    "vec = DictVectorizer(sparse=False)\n",
    "vec.fit(X_train_dict_g20)\n",
    "X_train_g20 = vec.transform(X_train_dict_g20)\n",
    "\n",
    "scaler = StandardScaler()\n",
    "scaler.fit(X_train_g20)\n",
    "X_train_sc_g20 = scaler.transform(X_train_g20)\n",
    "\n",
    "from sklearn.neighbors import KNeighborsRegressor\n",
    "\n",
    "# Fit a 10-nearest neighbors model.\n",
    "model_g20 = KNeighborsRegressor(n_neighbors=15)\n",
    "model_g20.fit(X_train_sc_g20, y_train_g20)\n",
    "\n",
    "# Calculate the model predictions on the training data.\n",
    "y_train_pred_g20 = model_g20.predict(X_train_sc_g20)\n",
    "y_train_pred_g20\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 206,
   "metadata": {
    "hideCode": false,
    "hidePrompt": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "537.5168324232575"
      ]
     },
     "execution_count": 206,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "mse_g20 = ((y_train_g20 - y_train_pred_g20) ** 2).mean()\n",
    "rmse_g20 = np.sqrt(mse_g20)\n",
    "rmse_g20"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 207,
   "metadata": {
    "hideCode": false,
    "hidePrompt": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "count    44551.000000\n",
       "mean       783.180490\n",
       "std        756.953306\n",
       "min          3.000000\n",
       "25%        365.000000\n",
       "50%        729.000000\n",
       "75%        851.000000\n",
       "max      10950.000000\n",
       "Name: days, dtype: float64"
      ]
     },
     "execution_count": 207,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_trade_g20['days'].describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 124,
   "metadata": {
    "hideCode": false,
    "hidePrompt": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>State Act ID</th>\n",
       "      <th>Intervention ID</th>\n",
       "      <th>State Act Title</th>\n",
       "      <th>Announcement Date</th>\n",
       "      <th>GTA_Evaluation</th>\n",
       "      <th>Currently in force</th>\n",
       "      <th>Inception Date</th>\n",
       "      <th>Removal Date</th>\n",
       "      <th>Implementing Jurisdiction</th>\n",
       "      <th>Intervention Type</th>\n",
       "      <th>...</th>\n",
       "      <th>965</th>\n",
       "      <th>966</th>\n",
       "      <th>969</th>\n",
       "      <th>971</th>\n",
       "      <th>972</th>\n",
       "      <th>973</th>\n",
       "      <th>979</th>\n",
       "      <th>980</th>\n",
       "      <th>990</th>\n",
       "      <th>days</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>9659</th>\n",
       "      <td>844</td>\n",
       "      <td>19641</td>\n",
       "      <td>Argentina: Subsides to dairy farmers</td>\n",
       "      <td>2009-12-31</td>\n",
       "      <td>Red</td>\n",
       "      <td>no</td>\n",
       "      <td>2009-03-05</td>\n",
       "      <td>2009-12-03</td>\n",
       "      <td>Argentina</td>\n",
       "      <td>Production subsidy</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>-28.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9660</th>\n",
       "      <td>844</td>\n",
       "      <td>19641</td>\n",
       "      <td>Argentina: Subsides to dairy farmers</td>\n",
       "      <td>2009-12-31</td>\n",
       "      <td>Red</td>\n",
       "      <td>no</td>\n",
       "      <td>2009-03-05</td>\n",
       "      <td>2009-12-03</td>\n",
       "      <td>Argentina</td>\n",
       "      <td>Production subsidy</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>-28.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>36321</th>\n",
       "      <td>3348</td>\n",
       "      <td>16355</td>\n",
       "      <td>India: Removal of Duty Entitlement Pass Book b...</td>\n",
       "      <td>2011-03-31</td>\n",
       "      <td>Green</td>\n",
       "      <td>no</td>\n",
       "      <td>2010-04-21</td>\n",
       "      <td>2010-09-30</td>\n",
       "      <td>India</td>\n",
       "      <td>Tax-based export incentive</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>-182.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>36324</th>\n",
       "      <td>3348</td>\n",
       "      <td>16355</td>\n",
       "      <td>India: Removal of Duty Entitlement Pass Book b...</td>\n",
       "      <td>2011-03-31</td>\n",
       "      <td>Green</td>\n",
       "      <td>no</td>\n",
       "      <td>2010-04-21</td>\n",
       "      <td>2010-09-30</td>\n",
       "      <td>India</td>\n",
       "      <td>Tax-based export incentive</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>-182.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>36325</th>\n",
       "      <td>3348</td>\n",
       "      <td>16355</td>\n",
       "      <td>India: Removal of Duty Entitlement Pass Book b...</td>\n",
       "      <td>2011-03-31</td>\n",
       "      <td>Green</td>\n",
       "      <td>no</td>\n",
       "      <td>2010-04-21</td>\n",
       "      <td>2010-09-30</td>\n",
       "      <td>India</td>\n",
       "      <td>Tax-based export incentive</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>-182.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>211954</th>\n",
       "      <td>27651</td>\n",
       "      <td>57587</td>\n",
       "      <td>Brazil: Temporary changes on import tariffs on...</td>\n",
       "      <td>2017-02-17</td>\n",
       "      <td>Green</td>\n",
       "      <td>no</td>\n",
       "      <td>2017-02-17</td>\n",
       "      <td>2016-08-16</td>\n",
       "      <td>Brazil</td>\n",
       "      <td>Import tariff</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>-185.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>211955</th>\n",
       "      <td>27651</td>\n",
       "      <td>57587</td>\n",
       "      <td>Brazil: Temporary changes on import tariffs on...</td>\n",
       "      <td>2017-02-17</td>\n",
       "      <td>Green</td>\n",
       "      <td>no</td>\n",
       "      <td>2017-02-17</td>\n",
       "      <td>2016-08-16</td>\n",
       "      <td>Brazil</td>\n",
       "      <td>Import tariff</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>-185.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>211957</th>\n",
       "      <td>27651</td>\n",
       "      <td>57587</td>\n",
       "      <td>Brazil: Temporary changes on import tariffs on...</td>\n",
       "      <td>2017-02-17</td>\n",
       "      <td>Green</td>\n",
       "      <td>no</td>\n",
       "      <td>2017-02-17</td>\n",
       "      <td>2016-08-16</td>\n",
       "      <td>Brazil</td>\n",
       "      <td>Import tariff</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>-185.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>211958</th>\n",
       "      <td>27651</td>\n",
       "      <td>57587</td>\n",
       "      <td>Brazil: Temporary changes on import tariffs on...</td>\n",
       "      <td>2017-02-17</td>\n",
       "      <td>Green</td>\n",
       "      <td>no</td>\n",
       "      <td>2017-02-17</td>\n",
       "      <td>2016-08-16</td>\n",
       "      <td>Brazil</td>\n",
       "      <td>Import tariff</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>-185.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>211959</th>\n",
       "      <td>27651</td>\n",
       "      <td>57587</td>\n",
       "      <td>Brazil: Temporary changes on import tariffs on...</td>\n",
       "      <td>2017-02-17</td>\n",
       "      <td>Green</td>\n",
       "      <td>no</td>\n",
       "      <td>2017-02-17</td>\n",
       "      <td>2016-08-16</td>\n",
       "      <td>Brazil</td>\n",
       "      <td>Import tariff</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>-185.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>249 rows × 350 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        State Act ID  Intervention ID  \\\n",
       "9659             844            19641   \n",
       "9660             844            19641   \n",
       "36321           3348            16355   \n",
       "36324           3348            16355   \n",
       "36325           3348            16355   \n",
       "...              ...              ...   \n",
       "211954         27651            57587   \n",
       "211955         27651            57587   \n",
       "211957         27651            57587   \n",
       "211958         27651            57587   \n",
       "211959         27651            57587   \n",
       "\n",
       "                                          State Act Title Announcement Date  \\\n",
       "9659                 Argentina: Subsides to dairy farmers        2009-12-31   \n",
       "9660                 Argentina: Subsides to dairy farmers        2009-12-31   \n",
       "36321   India: Removal of Duty Entitlement Pass Book b...        2011-03-31   \n",
       "36324   India: Removal of Duty Entitlement Pass Book b...        2011-03-31   \n",
       "36325   India: Removal of Duty Entitlement Pass Book b...        2011-03-31   \n",
       "...                                                   ...               ...   \n",
       "211954  Brazil: Temporary changes on import tariffs on...        2017-02-17   \n",
       "211955  Brazil: Temporary changes on import tariffs on...        2017-02-17   \n",
       "211957  Brazil: Temporary changes on import tariffs on...        2017-02-17   \n",
       "211958  Brazil: Temporary changes on import tariffs on...        2017-02-17   \n",
       "211959  Brazil: Temporary changes on import tariffs on...        2017-02-17   \n",
       "\n",
       "       GTA_Evaluation Currently in force Inception Date Removal Date  \\\n",
       "9659              Red                 no     2009-03-05   2009-12-03   \n",
       "9660              Red                 no     2009-03-05   2009-12-03   \n",
       "36321           Green                 no     2010-04-21   2010-09-30   \n",
       "36324           Green                 no     2010-04-21   2010-09-30   \n",
       "36325           Green                 no     2010-04-21   2010-09-30   \n",
       "...               ...                ...            ...          ...   \n",
       "211954          Green                 no     2017-02-17   2016-08-16   \n",
       "211955          Green                 no     2017-02-17   2016-08-16   \n",
       "211957          Green                 no     2017-02-17   2016-08-16   \n",
       "211958          Green                 no     2017-02-17   2016-08-16   \n",
       "211959          Green                 no     2017-02-17   2016-08-16   \n",
       "\n",
       "       Implementing Jurisdiction           Intervention Type  ... 965 966 969  \\\n",
       "9659                   Argentina          Production subsidy  ...   0   0   0   \n",
       "9660                   Argentina          Production subsidy  ...   0   0   0   \n",
       "36321                      India  Tax-based export incentive  ...   0   0   0   \n",
       "36324                      India  Tax-based export incentive  ...   0   0   0   \n",
       "36325                      India  Tax-based export incentive  ...   0   0   0   \n",
       "...                          ...                         ...  ...  ..  ..  ..   \n",
       "211954                    Brazil               Import tariff  ...   0   0   0   \n",
       "211955                    Brazil               Import tariff  ...   0   0   0   \n",
       "211957                    Brazil               Import tariff  ...   0   0   0   \n",
       "211958                    Brazil               Import tariff  ...   0   0   0   \n",
       "211959                    Brazil               Import tariff  ...   0   0   0   \n",
       "\n",
       "       971  972  973 979 980 990   days  \n",
       "9659     0    0    0   0   0   0  -28.0  \n",
       "9660     0    0    0   0   0   0  -28.0  \n",
       "36321    0    0    0   0   0   0 -182.0  \n",
       "36324    0    0    0   0   0   0 -182.0  \n",
       "36325    0    0    0   0   0   0 -182.0  \n",
       "...     ..  ...  ...  ..  ..  ..    ...  \n",
       "211954   0    0    0   0   0   0 -185.0  \n",
       "211955   0    0    0   0   0   0 -185.0  \n",
       "211957   0    0    0   0   0   0 -185.0  \n",
       "211958   0    0    0   0   0   0 -185.0  \n",
       "211959   0    0    0   0   0   0 -185.0  \n",
       "\n",
       "[249 rows x 350 columns]"
      ]
     },
     "execution_count": 124,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_trade_g20[df_trade_g20['days'] < 0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 125,
   "metadata": {
    "hideCode": false,
    "hidePrompt": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>State Act ID</th>\n",
       "      <th>Intervention ID</th>\n",
       "      <th>State Act Title</th>\n",
       "      <th>Announcement Date</th>\n",
       "      <th>GTA_Evaluation</th>\n",
       "      <th>Currently in force</th>\n",
       "      <th>Inception Date</th>\n",
       "      <th>Removal Date</th>\n",
       "      <th>Implementing Jurisdiction</th>\n",
       "      <th>Intervention Type</th>\n",
       "      <th>...</th>\n",
       "      <th>965</th>\n",
       "      <th>966</th>\n",
       "      <th>969</th>\n",
       "      <th>971</th>\n",
       "      <th>972</th>\n",
       "      <th>973</th>\n",
       "      <th>979</th>\n",
       "      <th>980</th>\n",
       "      <th>990</th>\n",
       "      <th>days</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>52</th>\n",
       "      <td>100</td>\n",
       "      <td>12745</td>\n",
       "      <td>Russia: Increase of tariffs for automobiles</td>\n",
       "      <td>2009-01-11</td>\n",
       "      <td>Red</td>\n",
       "      <td>no</td>\n",
       "      <td>2009-01-11</td>\n",
       "      <td>2010-07-12</td>\n",
       "      <td>Russia</td>\n",
       "      <td>Import tariff</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>547.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>53</th>\n",
       "      <td>100</td>\n",
       "      <td>12745</td>\n",
       "      <td>Russia: Increase of tariffs for automobiles</td>\n",
       "      <td>2009-01-11</td>\n",
       "      <td>Red</td>\n",
       "      <td>no</td>\n",
       "      <td>2009-01-11</td>\n",
       "      <td>2010-07-12</td>\n",
       "      <td>Russia</td>\n",
       "      <td>Import tariff</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>547.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>55</th>\n",
       "      <td>100</td>\n",
       "      <td>12745</td>\n",
       "      <td>Russia: Increase of tariffs for automobiles</td>\n",
       "      <td>2009-01-11</td>\n",
       "      <td>Red</td>\n",
       "      <td>no</td>\n",
       "      <td>2009-01-11</td>\n",
       "      <td>2010-07-12</td>\n",
       "      <td>Russia</td>\n",
       "      <td>Import tariff</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>547.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>56</th>\n",
       "      <td>100</td>\n",
       "      <td>12745</td>\n",
       "      <td>Russia: Increase of tariffs for automobiles</td>\n",
       "      <td>2009-01-11</td>\n",
       "      <td>Red</td>\n",
       "      <td>no</td>\n",
       "      <td>2009-01-11</td>\n",
       "      <td>2010-07-12</td>\n",
       "      <td>Russia</td>\n",
       "      <td>Import tariff</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>547.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>57</th>\n",
       "      <td>100</td>\n",
       "      <td>12745</td>\n",
       "      <td>Russia: Increase of tariffs for automobiles</td>\n",
       "      <td>2009-01-11</td>\n",
       "      <td>Red</td>\n",
       "      <td>no</td>\n",
       "      <td>2009-01-11</td>\n",
       "      <td>2010-07-12</td>\n",
       "      <td>Russia</td>\n",
       "      <td>Import tariff</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>547.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>339946</th>\n",
       "      <td>35689</td>\n",
       "      <td>69625</td>\n",
       "      <td>India: Temporary increase in export incentive ...</td>\n",
       "      <td>2018-08-08</td>\n",
       "      <td>Red</td>\n",
       "      <td>yes</td>\n",
       "      <td>2017-11-01</td>\n",
       "      <td>2020-03-30</td>\n",
       "      <td>India</td>\n",
       "      <td>Tax-based export incentive</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>600.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>339948</th>\n",
       "      <td>35689</td>\n",
       "      <td>69625</td>\n",
       "      <td>India: Temporary increase in export incentive ...</td>\n",
       "      <td>2018-08-08</td>\n",
       "      <td>Red</td>\n",
       "      <td>yes</td>\n",
       "      <td>2017-11-01</td>\n",
       "      <td>2020-03-30</td>\n",
       "      <td>India</td>\n",
       "      <td>Tax-based export incentive</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>600.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>339950</th>\n",
       "      <td>35689</td>\n",
       "      <td>69625</td>\n",
       "      <td>India: Temporary increase in export incentive ...</td>\n",
       "      <td>2018-08-08</td>\n",
       "      <td>Red</td>\n",
       "      <td>yes</td>\n",
       "      <td>2017-11-01</td>\n",
       "      <td>2020-03-30</td>\n",
       "      <td>India</td>\n",
       "      <td>Tax-based export incentive</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>600.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>339953</th>\n",
       "      <td>35689</td>\n",
       "      <td>69625</td>\n",
       "      <td>India: Temporary increase in export incentive ...</td>\n",
       "      <td>2018-08-08</td>\n",
       "      <td>Red</td>\n",
       "      <td>yes</td>\n",
       "      <td>2017-11-01</td>\n",
       "      <td>2020-03-30</td>\n",
       "      <td>India</td>\n",
       "      <td>Tax-based export incentive</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>600.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>339956</th>\n",
       "      <td>35689</td>\n",
       "      <td>69625</td>\n",
       "      <td>India: Temporary increase in export incentive ...</td>\n",
       "      <td>2018-08-08</td>\n",
       "      <td>Red</td>\n",
       "      <td>yes</td>\n",
       "      <td>2017-11-01</td>\n",
       "      <td>2020-03-30</td>\n",
       "      <td>India</td>\n",
       "      <td>Tax-based export incentive</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>600.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>33400 rows × 350 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        State Act ID  Intervention ID  \\\n",
       "52               100            12745   \n",
       "53               100            12745   \n",
       "55               100            12745   \n",
       "56               100            12745   \n",
       "57               100            12745   \n",
       "...              ...              ...   \n",
       "339946         35689            69625   \n",
       "339948         35689            69625   \n",
       "339950         35689            69625   \n",
       "339953         35689            69625   \n",
       "339956         35689            69625   \n",
       "\n",
       "                                          State Act Title Announcement Date  \\\n",
       "52            Russia: Increase of tariffs for automobiles        2009-01-11   \n",
       "53            Russia: Increase of tariffs for automobiles        2009-01-11   \n",
       "55            Russia: Increase of tariffs for automobiles        2009-01-11   \n",
       "56            Russia: Increase of tariffs for automobiles        2009-01-11   \n",
       "57            Russia: Increase of tariffs for automobiles        2009-01-11   \n",
       "...                                                   ...               ...   \n",
       "339946  India: Temporary increase in export incentive ...        2018-08-08   \n",
       "339948  India: Temporary increase in export incentive ...        2018-08-08   \n",
       "339950  India: Temporary increase in export incentive ...        2018-08-08   \n",
       "339953  India: Temporary increase in export incentive ...        2018-08-08   \n",
       "339956  India: Temporary increase in export incentive ...        2018-08-08   \n",
       "\n",
       "       GTA_Evaluation Currently in force Inception Date Removal Date  \\\n",
       "52                Red                 no     2009-01-11   2010-07-12   \n",
       "53                Red                 no     2009-01-11   2010-07-12   \n",
       "55                Red                 no     2009-01-11   2010-07-12   \n",
       "56                Red                 no     2009-01-11   2010-07-12   \n",
       "57                Red                 no     2009-01-11   2010-07-12   \n",
       "...               ...                ...            ...          ...   \n",
       "339946            Red                yes     2017-11-01   2020-03-30   \n",
       "339948            Red                yes     2017-11-01   2020-03-30   \n",
       "339950            Red                yes     2017-11-01   2020-03-30   \n",
       "339953            Red                yes     2017-11-01   2020-03-30   \n",
       "339956            Red                yes     2017-11-01   2020-03-30   \n",
       "\n",
       "       Implementing Jurisdiction           Intervention Type  ... 965 966 969  \\\n",
       "52                        Russia               Import tariff  ...   0   0   0   \n",
       "53                        Russia               Import tariff  ...   0   0   0   \n",
       "55                        Russia               Import tariff  ...   0   0   0   \n",
       "56                        Russia               Import tariff  ...   0   0   0   \n",
       "57                        Russia               Import tariff  ...   0   0   0   \n",
       "...                          ...                         ...  ...  ..  ..  ..   \n",
       "339946                     India  Tax-based export incentive  ...   0   0   0   \n",
       "339948                     India  Tax-based export incentive  ...   0   0   0   \n",
       "339950                     India  Tax-based export incentive  ...   0   0   0   \n",
       "339953                     India  Tax-based export incentive  ...   0   0   0   \n",
       "339956                     India  Tax-based export incentive  ...   0   0   0   \n",
       "\n",
       "       971  972  973 979 980 990   days  \n",
       "52       0    0    0   0   0   0  547.0  \n",
       "53       0    0    0   0   0   0  547.0  \n",
       "55       0    0    0   0   0   0  547.0  \n",
       "56       0    0    0   0   0   0  547.0  \n",
       "57       0    0    0   0   0   0  547.0  \n",
       "...     ..  ...  ...  ..  ..  ..    ...  \n",
       "339946   0    0    0   0   0   0  600.0  \n",
       "339948   0    0    0   0   0   0  600.0  \n",
       "339950   0    0    0   0   0   0  600.0  \n",
       "339953   0    0    0   0   0   0  600.0  \n",
       "339956   0    0    0   0   0   0  600.0  \n",
       "\n",
       "[33400 rows x 350 columns]"
      ]
     },
     "execution_count": 125,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_trade_g20"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 147,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['France', 'United Arab Emirates', 'United Kingdom', 'Portugal',\n",
       "       'Spain', 'Peru', 'Philippines', 'Poland', 'Saudi Arabia',\n",
       "       'Singapore', 'Thailand', 'Sweden', 'Switzerland', 'Norway',\n",
       "       'Turkey', 'United States of America', 'Uruguay', 'Vietnam',\n",
       "       'Paraguay', 'Netherlands', 'Mexico', 'Finland', 'Austria',\n",
       "       'Belarus', 'Brazil', 'Canada', 'Chile', 'China', 'Czechia',\n",
       "       'Korea, Republic of', 'Germany', 'Hong Kong', 'India', 'Indonesia',\n",
       "       'Israel', 'Italy', 'Japan', 'Malaysia', 'Syria', 'Romania',\n",
       "       'Hungary', 'Slovenia', 'Slovakia', 'Lithuania', 'Iran', 'Belgium',\n",
       "       'Myanmar', 'Russia', 'New Caledonia', 'Panama', 'New Zealand',\n",
       "       'Trinidad and Tobago', 'South Africa', 'Macedonia', 'Ukraine',\n",
       "       'Venezuela', 'Zimbabwe', 'Luxembourg', 'Argentina', 'Australia',\n",
       "       'Bahrain', 'Bulgaria', 'Kazakhstan', 'Colombia', 'Costa Rica',\n",
       "       'Dominican Republic', 'Greece', 'Georgia', 'El Salvador',\n",
       "       'Nigeria', 'Sri Lanka', 'Pakistan', 'Nepal', 'Taiwan',\n",
       "       'Bangladesh', 'Kenya', nan, 'Ghana', 'Egypt', 'Jamaica', 'Iceland',\n",
       "       'Belize', 'Barbados', 'Nicaragua', 'Republic of Moldova',\n",
       "       'Albania', 'Andorra', 'Jordan', 'Netherlands Antilles', 'Kuwait',\n",
       "       'Yemen', 'Kyrgyzstan', 'Niger', 'Libya', 'Morocco', 'Oman',\n",
       "       'Bolivia', 'Croatia', 'Serbia', 'Tunisia', 'Senegal', 'Mozambique',\n",
       "       'Mauritania', 'Uganda', 'Tanzania', 'Togo', 'Madagascar', 'Bhutan',\n",
       "       'Azerbaijan', 'Armenia', 'Algeria', 'Ivory Coast', 'Ireland',\n",
       "       'Cambodia', 'Gabon', 'Ethiopia', 'Estonia', 'Denmark', 'Ecuador',\n",
       "       'Latvia', 'Qatar', 'Guatemala', 'Bermuda', 'Cyprus', 'Honduras',\n",
       "       'Rwanda', 'Malawi', 'Saint Lucia', 'Lebanon', 'Liberia', 'Mali',\n",
       "       'Mongolia', 'Saint Kitts and Nevis',\n",
       "       'Saint Vincent and the Grenadines', 'Turkmenistan', 'Tonga',\n",
       "       'Uzbekistan', 'Zambia', \"Lao People's Democratic Republic\",\n",
       "       'Samoa', 'Sierra Leone', 'Somalia', 'Republic of the Sudan',\n",
       "       'Suriname', 'Tajikistan', 'Burkina Faso', 'Burundi', 'Cameroon',\n",
       "       'Cape Verde', 'Congo', 'Cuba', 'Bosnia and Herzegovina',\n",
       "       'Afghanistan', 'Angola', 'Bahamas', 'Benin', 'Haiti',\n",
       "       'Congo, The Democratic Republic of the', 'Guinea', 'Guyana',\n",
       "       'Iraq', 'Dominica', 'Eritrea', 'Fiji', 'Gambia', 'Aruba',\n",
       "       'Brunei Darussalam', 'State of Palestine', 'Mauritius',\n",
       "       'Montenegro', 'Malta', 'DPR Korea', 'Western Sahara', 'Swaziland',\n",
       "       'Tokelau', 'Lesotho', 'Central African Republic', 'Chad',\n",
       "       'Botswana', 'American Samoa', 'San Marino', 'Papua New Guinea',\n",
       "       'Montserrat', 'Equatorial Guinea', 'Guam', 'Maldives',\n",
       "       'Solomon Islands', 'Seychelles', 'Micronesia', 'Kiribati',\n",
       "       'Saint Pierre & Miquelon', 'Saint Helena', 'Comoros',\n",
       "       'French Polynesia', 'Grenada', 'Timor-Leste', 'Marshall Islands',\n",
       "       'Macao', 'Turks & Caicos Islands', 'Niue', 'Antigua and Barbuda',\n",
       "       'Cayman Islands', 'Vanuatu', 'Tuvalu', 'Namibia', 'Djibouti',\n",
       "       'Liechtenstein', 'Palau', 'Anguilla', 'Mayotte', 'Cook Islands',\n",
       "       'British Virgin Islands', 'Monaco', 'Nauru',\n",
       "       'Sao Tome and Principe', 'Guinea-Bissau', 'Martinique',\n",
       "       'French Guiana', 'Guadeloupe', 'Saint-Martin', 'Réunion',\n",
       "       'Pitcairn', 'Faeroe Islands', 'Saint-Barthélemy', 'South Sudan',\n",
       "       'Falkland Islands', 'Greenland', 'Northern Mariana Islands',\n",
       "       'Wallis & Futuna Islands', 'Vatican',\n",
       "       'Svalbard & Jan Mayen Islands', 'Puerto Rico',\n",
       "       'Virgin Islands, U.S.', 'Norfolk Island'], dtype=object)"
      ]
     },
     "execution_count": 147,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_trade['Affected Jurisdiction'].unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 146,
   "metadata": {
    "hideCode": false,
    "hidePrompt": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['Japan', 'United Kingdom', 'Sweden', 'Spain', 'Slovenia',\n",
       "       'Slovakia', 'Portugal', 'Netherlands', 'Mexico', 'Lithuania',\n",
       "       'Poland', 'Italy', 'Czechia', 'Austria', 'Belgium', 'Brazil',\n",
       "       'China', 'Finland', 'France', 'Germany', 'Hungary', 'Canada',\n",
       "       'India', 'Indonesia', 'Russia', 'Saudi Arabia', 'Turkey',\n",
       "       'Argentina', 'Australia', 'Croatia', 'South Africa', 'Romania',\n",
       "       'Greece', 'Bulgaria', 'Ireland', 'Estonia', 'Denmark', 'Latvia',\n",
       "       'Luxembourg', 'Malta', 'Cyprus'], dtype=object)"
      ]
     },
     "execution_count": 146,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_trade_g20['Affected Jurisdiction'].unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 164,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 141,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['France', 'United Arab Emirates', 'United Kingdom', 'Portugal',\n",
       "       'Spain', 'Peru', 'Philippines', 'Poland', 'Saudi Arabia',\n",
       "       'Singapore', 'Thailand', 'Sweden', 'Switzerland', 'Norway',\n",
       "       'Turkey', 'United States of America', 'Uruguay', 'Vietnam',\n",
       "       'Paraguay', 'Netherlands', 'Mexico', 'Finland', 'Austria',\n",
       "       'Belarus', 'Brazil', 'Canada', 'Chile', 'China', 'Czechia',\n",
       "       'Korea, Republic of', 'Germany', 'Hong Kong', 'India', 'Indonesia',\n",
       "       'Israel', 'Italy', 'Japan', 'Malaysia', 'Syria', 'Romania',\n",
       "       'Hungary', 'Slovenia', 'Slovakia', 'Lithuania', 'Iran', 'Belgium',\n",
       "       'Myanmar', 'Russia', 'New Caledonia', 'Panama', 'New Zealand',\n",
       "       'Trinidad and Tobago', 'South Africa', 'Macedonia', 'Ukraine',\n",
       "       'Venezuela', 'Zimbabwe', 'Luxembourg', 'Argentina', 'Australia',\n",
       "       'Bahrain', 'Bulgaria', 'Kazakhstan', 'Colombia', 'Costa Rica',\n",
       "       'Dominican Republic', 'Greece', 'Georgia', 'El Salvador',\n",
       "       'Nigeria', 'Sri Lanka', 'Pakistan', 'Nepal', 'Taiwan',\n",
       "       'Bangladesh', 'Kenya', nan, 'Ghana', 'Egypt', 'Jamaica', 'Iceland',\n",
       "       'Belize', 'Barbados', 'Nicaragua', 'Republic of Moldova',\n",
       "       'Albania', 'Andorra', 'Jordan', 'Netherlands Antilles', 'Kuwait',\n",
       "       'Yemen', 'Kyrgyzstan', 'Niger', 'Libya', 'Morocco', 'Oman',\n",
       "       'Bolivia', 'Croatia', 'Serbia', 'Tunisia', 'Senegal', 'Mozambique',\n",
       "       'Mauritania', 'Uganda', 'Tanzania', 'Togo', 'Madagascar', 'Bhutan',\n",
       "       'Azerbaijan', 'Armenia', 'Algeria', 'Ivory Coast', 'Ireland',\n",
       "       'Cambodia', 'Gabon', 'Ethiopia', 'Estonia', 'Denmark', 'Ecuador',\n",
       "       'Latvia', 'Qatar', 'Guatemala', 'Bermuda', 'Cyprus', 'Honduras',\n",
       "       'Rwanda', 'Malawi', 'Saint Lucia', 'Lebanon', 'Liberia', 'Mali',\n",
       "       'Mongolia', 'Saint Kitts and Nevis',\n",
       "       'Saint Vincent and the Grenadines', 'Turkmenistan', 'Tonga',\n",
       "       'Uzbekistan', 'Zambia', \"Lao People's Democratic Republic\",\n",
       "       'Samoa', 'Sierra Leone', 'Somalia', 'Republic of the Sudan',\n",
       "       'Suriname', 'Tajikistan', 'Burkina Faso', 'Burundi', 'Cameroon',\n",
       "       'Cape Verde', 'Congo', 'Cuba', 'Bosnia and Herzegovina',\n",
       "       'Afghanistan', 'Angola', 'Bahamas', 'Benin', 'Haiti',\n",
       "       'Congo, The Democratic Republic of the', 'Guinea', 'Guyana',\n",
       "       'Iraq', 'Dominica', 'Eritrea', 'Fiji', 'Gambia', 'Aruba',\n",
       "       'Brunei Darussalam', 'State of Palestine', 'Mauritius',\n",
       "       'Montenegro', 'Malta', 'DPR Korea', 'Western Sahara', 'Swaziland',\n",
       "       'Tokelau', 'Lesotho', 'Central African Republic', 'Chad',\n",
       "       'Botswana', 'American Samoa', 'San Marino', 'Papua New Guinea',\n",
       "       'Montserrat', 'Equatorial Guinea', 'Guam', 'Maldives',\n",
       "       'Solomon Islands', 'Seychelles', 'Micronesia', 'Kiribati',\n",
       "       'Saint Pierre & Miquelon', 'Saint Helena', 'Comoros',\n",
       "       'French Polynesia', 'Grenada', 'Timor-Leste', 'Marshall Islands',\n",
       "       'Macao', 'Turks & Caicos Islands', 'Niue', 'Antigua and Barbuda',\n",
       "       'Cayman Islands', 'Vanuatu', 'Tuvalu', 'Namibia', 'Djibouti',\n",
       "       'Liechtenstein', 'Palau', 'Anguilla', 'Mayotte', 'Cook Islands',\n",
       "       'British Virgin Islands', 'Monaco', 'Nauru',\n",
       "       'Sao Tome and Principe', 'Guinea-Bissau', 'Martinique',\n",
       "       'French Guiana', 'Guadeloupe', 'Saint-Martin', 'Réunion',\n",
       "       'Pitcairn', 'Faeroe Islands', 'Saint-Barthélemy', 'South Sudan',\n",
       "       'Falkland Islands', 'Greenland', 'Northern Mariana Islands',\n",
       "       'Wallis & Futuna Islands', 'Vatican',\n",
       "       'Svalbard & Jan Mayen Islands', 'Puerto Rico',\n",
       "       'Virgin Islands, U.S.', 'Norfolk Island'], dtype=object)"
      ]
     },
     "execution_count": 141,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_trade['Affected Jurisdiction'].unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 149,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "count    33400.000000\n",
       "mean       778.563563\n",
       "std        755.492393\n",
       "min       -550.000000\n",
       "25%        304.000000\n",
       "50%        547.000000\n",
       "75%       1095.000000\n",
       "max       9155.000000\n",
       "Name: days, dtype: float64"
      ]
     },
     "execution_count": 149,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_trade_g20.days.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 160,
   "metadata": {},
   "outputs": [],
   "source": [
    "df_trade_g20 = df_trade_g20[(df_trade_g20[\"days\"] > 0)]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 161,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "count    33354.000000\n",
       "mean       780.050878\n",
       "std        754.921842\n",
       "min          3.000000\n",
       "25%        304.000000\n",
       "50%        547.000000\n",
       "75%       1095.000000\n",
       "max       9155.000000\n",
       "Name: days, dtype: float64"
      ]
     },
     "execution_count": 161,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_trade_g20.days.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "\n",
    "\n"
   ]
  }
 ],
 "metadata": {
  "hide_code_all_hidden": false,
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
